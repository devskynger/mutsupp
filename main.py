import vk_api, traceback, threading, random,math,time,os,json
from datetime import datetime, timedelta
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from datetime import datetime

import socket
threadCount = 0
threadForId = []
threadForCommUs = []


ServiceToken1 = 'b115d9a5b115d9a5b115d9a5bfb207e21bbb115b115d9a5d2d63d72eca97b73a59da34c'
ServiceToken2 = 'e51f6cc3e51f6cc3e51f6cc313e5630d51ee51fe51f6cc38776053b4afe81fc29de2890'
ServiceToken3 = '21f4181621f4181621f418166c22e5d00e221f421f41816426457688139458300c796fe'
ServiceToken4 = '8c4d16958c4d16958c4d1695bb8f5cdd8d88c4d8c4d1695efdc2d5520978aa39eb59ed6'
ServiceToken5 = 'a9b0c790a9b0c790a9b0c7905daaa10c89aa9b0a9b0c790ca21fc607f75bb761717d594'
ServiceToken6 = 'b89e9959b89e9959b89e995912bb8f5243bb89eb89e9959db0fa5467fb47fae87d507bb'
sessionSrv1 = vk_api.VkApi(token=ServiceToken1)
vkSrv1 = sessionSrv1.get_api()
sessionSrv2 = vk_api.VkApi(token=ServiceToken2)
vkSrv2 = sessionSrv2.get_api()
sessionSrv3 = vk_api.VkApi(token=ServiceToken3)
vkSrv3 = sessionSrv3.get_api()
sessionSrv4 = vk_api.VkApi(token=ServiceToken4)
vkSrv4 = sessionSrv3.get_api()
sessionSrv5 = vk_api.VkApi(token=ServiceToken5)
vkSrv5 = sessionSrv3.get_api()
sessionSrv6 = vk_api.VkApi(token=ServiceToken6)
vkSrv6 = sessionSrv3.get_api()


goshatok = "vk1.a.qUJokxhrzpz-bQ5F4MgCejIe_KPdCrFm0G4WT37yBefY8K08UWZ5uIVkWjSoXnKHJvQyfVHXCx4tKuIgM1oifxpCzFiCeIgMBFHY74UehNNW9HxGJpB4Yg9vjtyQqPs4yiantYXM1TEe7VmJIRzJGhIbVDLbVmyC-0D9gTDnailcRGmkHmR_n0fJsOTBhOhxgMjz5Nvo_rkzuUwhXQ8r8g"
sessionG = vk_api.VkApi(token=goshatok)
vkG = sessionG.get_api()

#token = "vk1.a.6XnjJyHsFrZuU-Hg4ZdQxd8bZNgDhU4pdCtkb_Y5Sa46BYyWG_4ymNeYAQh9Mw3Oau5cgJfNSekPKJZUSEjtxcKrz2v_KIZf9L3UwVmfp9Z2uQN6uT5QmyxUtUYRUh-eUgNjYYq-MKc0l7iYyA-8uvgbwRd4aoZpcnl4W4lk_PzxVgXV5naZirBhH4t0fXh-FElL3fwkrDkoVS261UG8dQ"
GroupToken = "vk1.a.PnjjMVU5_JxNWE9YSszDAwzTPmwK1wRh-jrfzJl5CEMKkO7IBMcySRzERTulLp_4AAMafqRlt0xhCkleFRVacZXOsf00Zkd5CCfODNZSbAiAJKa1-Fr5qwZPduoIV-yqD525rwSkHRYw0ID0Mhe2xtht4aXkPNDuRBdHkKRzI-d8iiuORPtriCvJDkZR1lPae1nWT5wgdE5jehn2gcuuIw"
session = vk_api.VkApi(token=GroupToken)
vk = session.get_api()
vkGroup = session.get_api()
longpoll = VkBotLongPoll(session, 213443881)

Bot1Token = "vk1.a.1TyfBTt-PlOIqHDzMgxpmQPF6yKw4twJKgAN7FUVc0DPXycyXUhkiu7Fvt1YgibguaLd0-K865qCX5y6T_umnqpbfusQxtbrfh4w8j7rQips4r52kuJd2g78USmefgVQN06lQp0IIUo4-9SuAGrUJPP1fRFgG0qIychD4kWFigL0RrHQx8ktb4Mw0OSQwVIwp_b8P5Rjuc2UBwoQeOorWA"
sessionBot1 = vk_api.VkApi(token=Bot1Token)
vkBot1 = sessionBot1.get_api()
prEvent = None


def main(): # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
	global threadCount
	global prEvent
	try:
		for event in longpoll.listen():
			if event.obj != prEvent: 
				prEvent = event.obj
				thr = threading.Thread(target=EventHandler, args=(event, )).start()

	except BaseException as e:
		print(e)
		threading.Thread(target=main).start() 


def EventHandler(event):
	global threadCount
	if event.type == VkBotEventType.MESSAGE_EVENT: # –ö–Ω–æ–ø–∫–∏
		vk.messages.sendMessageEventAnswer(event_id=event.obj.event_id,  user_id=event.obj.user_id, peer_id=event.obj.peer_id,event_data=json.dumps(event.obj['payload']))
		id = event.obj['user_id']
		pld = event.obj['payload']
		user_get = vk.users.get(user_ids = (id))
		user_get = user_get[0]
		first_name = user_get['first_name']
		last_name = user_get['last_name']
		full_name = first_name + " " + last_name
		name = "@id" + str(id) + "(" + full_name + ")" + ", "
		TodaysDate = (datetime.now()).strftime('%d.%m.%y')

		allId = ''
		try:
			allId = open('data/AllId.txt', encoding='utf-8').read()
		except BaseException:
			pass

		if str(id) not in allId:
			msstart(id, '–ü—Ä–∏–≤–µ—Ç, '+full_name+'!üëã\n–Ø –≤–∏–∂—É, —á—Ç–æ —Ç—ã –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MutSupp. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –ø–æ—Å—Ç, —Ç–µ–±–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –°–°–´–õ–ö–£ –Ω–∞ –Ω–µ–≥–æ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å—ë, —á—Ç–æ —è —Å–∫–∞–∂—É!\n\nüìù–¢–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–µ–±–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ - https://vk.com/topic-213443881_49767270')                           
			open('data/AllId.txt', 'a', encoding='utf-8').write(str(id)+'\n')
			open('data/'+TodaysDate+'AllId.txt', 'a', encoding='utf-8').write(str(id)+'\n')

		if pld == 4: # –ù–∞–∑–∞–¥

			waitYPusrs = ''
			try:
				waitYPusrs = open('data/wait_YPusrs.txt',encoding='utf-8').read()
			except BaseException:
				pass
			open(r'data/wait_YPusrs.txt', 'w',encoding='utf-8').write(waitYPusrs.replace(str(id)+'\n', ''))
			waitLikeOrComm = ''
			try:
				waitLikeOrComm=open(r'data/waitLikeOrComm.txt',encoding='utf-8').read()
			except BaseException:
				pass
			ZapDeleteId = ''
			try:
				ZapDeleteId=open(r'data/ZapDeleteId.txt', encoding='utf-8').read()
			except BaseException:
				pass
			open(r'data/waitLikeOrComm.txt','w',encoding='utf-8').write(waitLikeOrComm.replace(str(id)+'\n',''))
			CommOnUsts = ''
			try:
				CommOnUsts=open(r'data/CommOnUsts.txt',encoding='utf-8').read()
			except BaseException:
				pass
			open('data/CommOnUsts.txt','w',encoding='utf-8').write(CommOnUsts.replace(str(id)+'\n', ''))
			ZapDeleteId = ''
			try:
				ZapDeleteId = open(r'data/ZapDeleteId.txt', encoding='utf-8').read()
			except BaseException:
				print(traceback.format_exc())
			CommClosed = ''
			try:
				CommClosed = open(r'data/CommClosed.txt', encoding='utf-8').read()
			except BaseException:
				print(traceback.format_exc())
			open(r'data/ZapDeleteId.txt', 'w', encoding='utf-8').write(ZapDeleteId.replace(str(id)+'\n', ''))
			open(r'data/CommClosed.txt', 'w', encoding='utf-8').write(CommClosed.replace(str(id)+'\n', ''))
			regAutoLike = ''
			try:
				regAutoLike = open('AL/regAutoLike.txt', encoding='utf-8').read()
			except BaseException:
				pass
			open('AL/regAutoLike.txt', 'w', encoding='utf-8').write(regAutoLike.replace(str(id)+'\n', ''))
			msstart(id, '–û–∫')
			

		if pld == 3: # –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞
			try:
				open(r'data/ZapDeleteId.txt', 'a', encoding='utf-8').write(str(id)+'\n')
			except BaseException:
				print(traceback.format_exc())
				open(r'data/ZapDeleteId.txt', 'w', encoding='utf-8').write(str(id)+'\n')
			keyboard = VkKeyboard()
			keyboard.add_callback_button('–ù–∞–∑–∞–¥', VkKeyboardColor.NEGATIVE, payload=4)
			send_message(id, '–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—É—é –∑–∞–ø–∏—Å—å', keyboard)


		if pld == '0': # –ü—Ä–æ—Ñ–∏–ª—å
			UserInAutoLike = ''
			try:
				UserInAutoLike = open('AL/UserInAutoLike.txt', encoding='utf-8').read()
			except BaseException:
				pass
			TodaysDate = (datetime.now()).strftime('%d.%m.%y')
			LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')
			keyboard = VkKeyboard(inline=True)

			if str(id) in UserInAutoLike:
				keyboard.add_button("–ê–≤—Ç–æ–õ–∞–π–∫", VkKeyboardColor.NEGATIVE)
			else:
				keyboard.add_button("–ê–≤—Ç–æ–õ–∞–π–∫", VkKeyboardColor.POSITIVE)


			keyboard.add_line()
			keyboard.add_button('–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç')

			psts = ''
			try:
				psts += open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read() + '\n'
			except BaseException:
				pass 
			try:
				psts += open('data/Post_From'+str(id)+'_'+LastDate+'.txt', encoding='utf-8').read()
			except BaseException:
				pass

			pstsCom = ''
			try:
				pstsCom += open('data/PostCom_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read() + '\n'
			except BaseException:
				pass 
			try:
				pstsCom += open('data/PostCom_From'+str(id)+'_'+LastDate+'.txt', encoding='utf-8').read()
			except BaseException:
				pass
			vipUs = ''
			try:
				vipUs = open('data/vip.txt', encoding='utf-8').read()
			except BaseException:
				pass

			vipStat = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

			if str(id) in vipUs:
				vipStat = '–¥–æ '+open('data/vip'+str(id)+'.txt', encoding='utf-8').read()

			

			send_message(id, name+'—Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\nüî§ –°–ø–µ—Ü. –ê–π–¥–∏: '+str(id)+'\nüíéVIP-—Å—Ç–∞—Ç—É—Å: '+vipStat+'\nüë•–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π MutSupp: '+str(len(allId.split()))+'\n\nüìù–¢–≤–æ–∏ –ø–æ—Å—Ç—ã –∑–∞ 2 –¥–Ω—è:\n\n–î–ª—è –ª–∞–π–∫–æ–≤‚ù§:\n'+psts+'\n\n–î–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤üí¨:\n'+pstsCom, keyboard)



		if pld == 1: # –¶–µ–Ω—ã
			keyboard = VkKeyboard(inline=True)
			keyboard.add_openlink_button('–ö—É–ø–∏—Ç—å —á—Ç–æ-—Ç–æ', 'https://vk.com/id582582218')
			vk.messages.send(user_id=id, message='üí∏–¶–µ–Ω—ã —É—Å–ª—É–≥:\n\n‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—É (–Ω–∞ —Ç–≤–æ—é –≥—Ä—É–ø–ø—É –±—É–¥—É—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ MutSupp) - 39—Ä/–¥–µ–Ω—å\n‚Ä¢ –î–æ–ø. –ø–æ—Å—Ç (—Ç—ã –º–æ–∂–µ—à—å —Å–∫–∏–Ω—É—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø–æ—Å—Ç) - 19—Ä/–ø–æ—Å—Ç\n‚Ä¢ VIP-—Å—Ç–∞—Ç—É—Å (–ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏ - https://vk.com/topic-213443881_49983313) - 99—Ä/–º–µ—Å\n\n@id730993538(*–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç*)', random_id=0, keyboard=keyboard.get_keyboard())  
	if event.type == VkBotEventType.MESSAGE_NEW: # –°–æ–æ–±—â–µ–Ω–∏—è    
		if event.from_chat: 
			mid = event.obj['message']['conversation_message_id']
			id = event.obj['message']['peer_id']-2000000000
			text = event.obj['message']['text']
			userid = event.obj['message']['from_id']


			if id == 6: # MS WORK
				user_get = vk.users.get(user_ids = (userid))
				user_get = user_get[0]
				first_name = user_get['first_name']
				last_name = user_get['last_name']
				full_name = first_name + " " + last_name
				name = "@id" + str(id) + "(" + full_name + ")" + ", "
				try:
					os.mkdir('MSW')
				except BaseException:
					pass


				if 'https://vk.com/' in text and len(text.split()) == 1:
					try:
						us = text.split()[0]
						if 'https://vk.com/' in us:
								us = us.replace('https://vk.com/','')
						elif '[' in us:
							us = us.replace('[','').replace(']','').split('|')[0]
						us = vk.users.get(user_ids=us)[0]['id']
						InvitedUsrsID = ''
						try:
							InvitedUsrsID = open('MSW/IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						if str(us) not in InvitedUsrsID:
							open('MSW/IvitedUsrs.txt', 'a', encoding='utf-8').write(str(us)+'\n')	
							open('MSW/'+str(userid)+'IvitedUsrs.txt', 'a', encoding='utf-8').write(str(us)+'\n')	
							send_messageCHAT(id, '‚úÖ–Ø –∑–∞–ø–∏—Å–∞–ª –µ–≥–æ - @id' + str(us))

						else:
							send_messageCHAT(id, '‚õî–ï–≥–æ —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª –∫—Ç–æ-—Ç–æ!')
					except BaseException as e:
						send_messageCHAT(id, '‚õî–û—à–∏–±–∫–∞: '+str(e))


				if text == 'key!':
					keyboard = VkKeyboard()
					keyboard.add_button('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', VkKeyboardColor.POSITIVE)
					keyboard.add_button('–£–¥–∞–ª–∏—Ç—å', VkKeyboardColor.NEGATIVE)
					keyboard.add_line()
					keyboard.add_button('–ü–æ–ª—É—á–∏—Ç—å')
					send_messageCHAT(id, '–æ–∫', keyboard)


				if text == '[club213443881|@mutsupp] –ü–æ–ª—É—á–∏—Ç—å' or text == '–ü–æ–ª—É—á–∏—Ç—å':
					try:
						uss = open('pplsForSpam.txt', encoding='utf-8').read().split()
						u = str(random.choice(uss))
						send_messageCHAT(id, 'üëâ –í–æ—Ç —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç:\n\n@id'+u)
						uss1 = open('pplsForSpam.txt', encoding='utf-8').read()
						open('pplsForSpam.txt', 'w',encoding='utf-8').write(uss1.replace(u+'\n', ''))
					except BaseException as e:
						print(traceback.format_exc())
						send_messageCHAT(id, '‚õî–û—à–∏–±–∫–∞: ' + str(e))


				if text == '[club213443881|@mutsupp] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å' or text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å':
					sp = {}
					
					msg = ''
					n = 1
					SendPostsUsrs = []
					try:
						SendPostsUsrs = open('MSW/SendPostsUsrs.txt', encoding='utf-8').read().split()
					except BaseException:
						pass 
					invUsrs = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read().split()
					for c in invUsrs:
						sp[c] = SendPostsUsrs.count(c)
					sorted_users = sorted(sp.items(), key=lambda x: x[1])
					for user_id, num_posts in sorted_users:
						msg += str(n) + '. @id' + str(user_id)+' - ' + str(num_posts) + '\n'
						n += 1	

					send_messageCHAT(id, name+'–≤–æ—Ç –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª:\n\n'+msg)


				if text == '[club213443881|@mutsupp] –£–¥–∞–ª–∏—Ç—å' or text == '–£–¥–∞–ª–∏—Ç—å':
					send_messageCHAT(id, '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–æ–≥–æ-—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–ª–µ–¥—É—é—â–µ–µ: \n\n "—É–¥–∞–ª–∏—Ç—å –ó–î–ï–°–¨_–°–°–´–õ–ö–ê" - —É–¥–∞–ª–∏—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞\n"—É–¥–∞–ª–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö" - —É–¥–∞–ª–∏—Ç –ª—é–¥–µ–π, —Å–∫–∏–Ω—É–≤—à–∏—Ö 3 –∏ –±–æ–ª–µ–µ –ø–æ—Å—Ç–æ–≤\n"—É–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö" - —É–¥–∞–ª–∏—Ç –≤—Å–µ—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Å–∫–∏–Ω—É–ª')


				if '—É–¥–∞–ª–∏—Ç—å ' in text.lower() and '–∞–∫—Ç–∏–≤–Ω—ã—Ö' not in text.lower() and '–≤—Å–µ—Ö' not in text.lower() and len(text.split()) == 2:
					try:
						us = text.split()[1]
						if 'https://vk.com/' in us:
								us = us.replace('https://vk.com/','')
						elif '[' in us:
							us = us.replace('[','').replace(']','').split('|')[0]
						us = vk.users.get(user_ids=us)[0]['id']
						InvitedUsrsID = ''
						try:
							InvitedUsrsID = open('MSW/IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						inv = ''
						try:
							inv = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						open('MSW/IvitedUsrs.txt', 'w', encoding='utf-8').write(InvitedUsrsID.replace(str(us)+'\n', ''))
						open('MSW/'+str(userid)+'IvitedUsrs.txt', 'w', encoding='utf-8').write(inv.replace(str(us)+'\n', ''))	
						send_messageCHAT(id, '‚úÖ –Ø —É–¥–∞–ª–∏–ª –µ–≥–æ - @id' +str(us))
					except BaseException as e:
						send_messageCHAT(id, '‚õî–û—à–∏–±–∫–∞: '+str(e))


				if '—É–¥–∞–ª–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö ' in text.lower() and len(text.split()) == 3:
					sp = {}
					dlt = []
					
					msg = ''
					n = 1
					SendPostsUsrs = []
					try:
						SendPostsUsrs = open('MSW/SendPostsUsrs.txt', encoding='utf-8').read().split()
					except BaseException:
						pass 
					invUsrs = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read().split()
					for c in invUsrs:
						sp[c] = SendPostsUsrs.count(c)
					for c in sp:
						q = sp[c]
						if q >= 3:
							dlt.append(c)

					for us in dlt:
						InvitedUsrsID = ''
						try:
							InvitedUsrsID = open('MSW/IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						inv = ''
						try:
							inv = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						open('MSW/IvitedUsrs.txt', 'w', encoding='utf-8').write(InvitedUsrsID.replace(str(us)+'\n', ''))
						open('MSW/'+str(userid)+'IvitedUsrs.txt', 'w', encoding='utf-8').write(inv.replace(str(us)+'\n', ''))	
						msg += '@id'+str(us)+'\n'
					send_messageCHAT(id, '‚úÖ –Ø —É–¥–∞–ª–∏–ª –≤—Å–µ—Ö –ª—é–¥–µ–π, —Å–∫–∏–Ω—É–≤—à–∏—Ö 3 –∏ –±–æ–ª–µ–µ –ø–æ—Å—Ç–æ–≤:\n\n' + msg)


				if '—É–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö' in text.lower() and len(text.split()) == 2:
					msg = ''
					invUsrs = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read().split()
					for us in invUsrs:
						InvitedUsrsID = ''
						try:
							InvitedUsrsID = open('MSW/IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						inv = ''
						try:
							inv = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read()
						except BaseException:
							pass
						open('MSW/IvitedUsrs.txt', 'w', encoding='utf-8').write(InvitedUsrsID.replace(str(us)+'\n', ''))
						open('MSW/'+str(userid)+'IvitedUsrs.txt', 'w', encoding='utf-8').write(inv.replace(str(us)+'\n', ''))	
						msg += '@id'+str(us)+'\n'
					send_messageCHAT(id, '‚úÖ –Ø —É–¥–∞–ª–∏–ª –≤—Å–µ—Ö –ª—é–¥–µ–π:\n\n' + msg)


			if id == 3: # MS ADMINS
				TodaysDate = (datetime.now()).strftime('%d.%m.%y')
				LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')


				if '+–≤–∏–ø ' in text and len(text.split()) > 2:
					try:
						month = int(text.split()[2])
						us = text.split()[1]
						if 'https://vk.com/' in us:
								us = us.replace('https://vk.com/','')
						elif '[' in us:
							us = us.replace('[','').replace(']','').split('|')[0]
						us = vk.users.get(user_ids=us)[0]['id']


						vipUs = ''
						try:
							vipUs = open('data/vip.txt', encoding='utf-8').read()
						except BaseException:
							pass
						if str(us) in vipUs:
							send_messageCHAT(id, '‚õî–£ –Ω–µ–≥–æ @id'+str(us)+' —É–∂–µ –µ—Å—Ç—å VIP-–∫–∞!')
						else:
							open('data/vip.txt', 'a', encoding='utf-8').write(str(us)+'\n')
							TodaysDate = (datetime.now()).strftime('%d.%m.%y')
							dt = 31 * month
							DateClear = ((datetime.now()) + timedelta(days=int(dt))).strftime('%d.%m.%y')
							open('data/vip'+str(us)+'.txt', 'w', encoding='utf-8').write(str(DateClear))
							send_messageCHAT(id, '‚úÖ–£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω VIP —Å—Ç–∞—Ç—É—Å @id'+str(us)+' –¥–æ '+DateClear)  
							try:
								send_message(us, '‚úÖ –¢–µ–±–µ –≤—ã–¥–∞–Ω VIP-—Å—Ç–∞—Ç—É—Å –¥–æ '+DateClear)  
							except BaseException:
								pass


					except BaseException as e:
						send_messageCHAT(id, '‚õî–û—à–∏–±–∫–∞: '+str(e))


				if text == 'upgkey':
					allUs = []
					uss = open('data/AllId.txt', encoding='utf-8').read().split()
					for c in uss:
						allUs.append(c)
					for i in allUs:
						try:
							msstart(i, '‚úÖ–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')
						except BaseException:
							send_messageCHAT(3, '–ó–∞–±–ª–æ–∫–∞–ª - @id'+str(i))

					
				if '+–ø–æ—Å—Ç—ã ' in text:
					try:
						us = text.split()[1]
						psts = text.split()[2]
						if 'https://vk.com/' in us:
								us = us.replace('https://vk.com/','')
						elif '[' in us:
							us = us.replace('[','').replace(']','').split('|')[0]
						us = vk.users.get(user_ids=us)[0]['id']
						open('data/addPost'+str(us)+'.txt', 'w', encoding='utf-8').write(str(psts))
						send_messageCHAT(id, '‚úÖ–Ø –¥–æ–±–∞–≤–∏–ª –¥–æ–ø. –ø–æ—Å—Ç @id'+str(us)+'. –ö–æ–ª-–≤–æ - '+open('data/addPost'+str(us)+'.txt', encoding='utf-8').read())
					except BaseException as e:
						send_messageCHAT(id, '‚õî–û—à–∏–±–∫–∞: '+str(e))


				if text == 'dlt':
					DeleteDontActiveUsrs()
					send_messageCHAT(id, '–ó–∞–≤–µ—Ä—à–∏–ª')


				if text == "[club213443881|@mutsupp] MutSupp":
					TodaysDate = (datetime.now()).strftime('%d.%m.%y')
					LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')
					vipUs = ''
					try:
						vipUs = open('data/vip.txt', encoding='utf-8').read()
					except BaseException:
						pass
					allId = ''
					try:
						allId = open('data/AllId.txt', encoding='utf-8').read()
					except BaseException:
						pass

					pstsT = ''
					try:
						pstsT = open('data/'+TodaysDate+'wall.txt', encoding='utf-8').read()
					except BaseException:
						pass
					pstsL = ''
					try:
						pstsL = open('data/'+LastDate+'wall.txt', encoding='utf-8').read()
					except BaseException:
						pass
					pstsCT = ''
					try:
						pstsCT = open('data/'+TodaysDate+'WallForComm.txt', encoding='utf-8').read()
					except BaseException:
						pass
					pstsCL = ''
					try:
						pstsCL = open('data/'+LastDate+'WallForComm.txt', encoding='utf-8').read()
					except BaseException:
						pass

					UserInAutoLike = ''
					try:
						UserInAutoLike = open('AL/UserInAutoLike.txt', encoding='utf-8').read()
					except BaseException:
						pass
					AllIdToday = ''
					try:
						AllIdToday = open('data/'+TodaysDate+'AllId.txt', encoding='utf-8').read()
					except BaseException:
						pass

					send_messageCHAT(id, "–í–æ—Ç –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ MutSupp'–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Çüìä:\n\nüìà–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: "+str(len(AllIdToday.split()))+"\nüë•–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: "+str(len(allId.split()))+"\nüíéVIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: "+str(len(vipUs.split()))+"\n‚ù§–ê–≤—Ç–æ–õ–∞–π–∫–æ–º –ø–æ–ª—å–∑—É—é—Ç—Å—è: "+str(len(UserInAutoLike.split()))+"\n\nüìù‚ù§–ü–æ—Å—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: "+str(len(pstsT.split()))+"\nüìù‚ù§–ü–æ—Å—Ç–æ–≤ –∑–∞ –≤—á–µ—Ä–∞: "+str(len(pstsL.split()))+"\nüìù‚ù§üí¨–ü–æ—Å—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: "+str(len(pstsCT.split()))+"\nüìù‚ù§üí¨–ü–æ—Å—Ç–æ–≤ –∑–∞ –≤—á–µ—Ä–∞: "+str(len(pstsCL.split())))


				if text == 'key!!!':
					keyboard = VkKeyboard()
					keyboard.add_button("MutSupp", VkKeyboardColor.POSITIVE)
					send_messageCHAT(id, 'okeey)', keyboard)


				if "!–±–ª–æ–∫ " in text:
					try:
						us = text.split()[1]
						com =  text.split()[2]
						UsInJob = []
						try:
							UsInJob=open('data/UsInJob.txt', encoding='utf-8').read().split()
						except BaseException:
							pass
						for j in UsInJob:
							usrsNew=''
							try:
								usrsNew=open('data/'+str(j)+'usrsNew.txt', encoding='utf-8').read()
							except BaseException:
								pass
							for h in usrsNew.split():
								if str(h) == str(us):
									open('data/'+str(j)+'usrsNew.txt','w', encoding='utf-8').write(usrsNew.replace(str(h)+'\n',''))
									send_messageCHAT(6, '@id'+str(j)+', —è —É–¥–∞–ª–∏–ª –µ–≥–æ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–æ MutSupp - '+us)


						if 'https://vk.com/' in us:
							us = us.replace('https://vk.com/','')
						elif '[' in us:
							us = us.replace('[','').replace(']','').split('|')[0]
						us = vk.users.get(user_ids=us)[0]['id']
						vkG.groups.ban(group_id=213443881, owner_id=us,reason=0,comment=com,comment_visible=1)
						

						AllId = ''
						try:
							AllId = open('data/AllId.txt', encoding='utf-8').read()
						except BaseException:
							pass 
						open('data/AllId.txt','w', encoding='utf-8').write(AllId.replace(str(us)+'\n',''))
						AllId1 = ''
						try:
							AllId1 = open('data/AllId1.txt', encoding='utf-8').read()
						except BaseException:
							pass 
						open('data/AllId1.txt','w', encoding='utf-8').write(AllId1.replace(str(us)+'\n',''))



						send_messageCHAT(3, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id'+str(us)+' - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∏—á–∏–Ω–∞: '+com)
					except BaseException as e:
						send_messageCHAT(3, str(e))


				if '+—Å–ª–æ—Ç' in text:
					try:
						textInList = text.split()
						slot = textInList[1]
						group = textInList[2]
						date = textInList[3]        
						if '[' in group and ']' in group:
							group = 'https://vk.com/'+group.replace('[', '').replace(']','').split('|')[0]
						group=group.replace('https://vk.com/','')
							
						group = str(vk.groups.getById(group_id=group)[0]['id'])
						TodaysDate = (datetime.now()).strftime('%d.%m.%y')
						DateClear = ((datetime.now()) + timedelta(days=int(date))).strftime('%d.%m.%y')
						open(r'data/slot'+slot+'.txt', 'w', encoding='utf-8').write(group)
						open(r'data/slotTIme'+slot+'.txt', 'w', encoding='utf-8').write(DateClear)
						vk.messages.send(chat_id=id, message='–ì—Ä—É–ø–ø–∞ @club'+group+' –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —Å–ª–æ—Ç –Ω–æ–º–µ—Ä '+slot+' –¥–æ '+DateClear, random_id=0)
					except BaseException:
						vk.messages.send(chat_id=id, message='–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞', random_id=0)
						print(traceback.format_exc())
				if '-—Å–ª–æ—Ç' in text:
					textInList = text.split()
					slot = textInList[1]
					open(r'data/slot'+slot+'.txt', 'w', encoding='utf-8').write('mutsupp')
					open(r'data/slotTIme'+slot+'.txt', 'w', encoding='utf-8')
					vk.messages.send(chat_id=id, message='–°–ª–æ—Ç –Ω–æ–º–µ—Ä '+slot+' –æ—á–∏—â–µ–Ω', random_id=0)


				if "+—Å–æ–æ–±—â–µ–Ω–∏–µ" in text:
					text = text.replace("+—Å–æ–æ–±—â–µ–Ω–∏–µ", '')
					AllId = open(r'data/AllId.txt', encoding='utf-8').read()
					AllIdInList = AllId.split()
					threading.Thread(target=SmsSend, args=(AllIdInList, text,)).start()

				if text == '!–≥—Ä—É–ø–ø—ã':
					sms = ''
					for i in range(1,6):
						group_id = open(r'data/slot'+str(i)+'.txt', encoding='utf-8').read()
						date = open(r'data/slotTIme'+str(i)+'.txt', encoding='utf-8').read()
						if '.' in date:
							date = ' - –¥–æ ' + date
						group = vk.groups.getById(group_id=group_id)[0]['screen_name']
						sms += str(i)+'. @'+group+date+'\n'
					vk.messages.send(chat_id=3, message=sms.replace('@mutsupp', '- –ü—É—Å—Ç–æ–π –°–ª–æ—Ç - '), random_id=0)

				if text == 'act threads':
					send_messageCHAT(id, str(threading.active_count()))


			if id == 2: # MS CHAT
				getSMS = vk.messages.getById(message_ids=mid)
				try:
					if len(getSMS['items'][0]['attachments']) > 0:
						gr_id = str(getSMS['items'][0]['attachments'][0]['wall']['from_id'])
						it_id = str(getSMS['items'][0]['attachments'][0]['wall']['id'])
						url = 'https://vk.com/wall'+gr_id+'_'+it_id
						text = url
				except BaseException: 
					text=text

				if 'https://vk.com/' in text and userid != 730993538: 
					TodaysDate = (datetime.now()).strftime('%d.%m.%y')
					LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')
				# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏
					user_get = vk.users.get(user_ids = (userid))
					user_get = user_get[0]
					first_name = user_get['first_name']
					last_name = user_get['last_name']
					full_name = first_name + " " + last_name
					name = "@id" + str(userid) + "(" + full_name + ")" + ", "
					vk.messages.send(chat_id=id, message=name+"—Å–∞–ø–ø–æ—Ä—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –õ–° –±–æ—Ç–∞ (—Ç–∞–º –∂–µ –±—É–¥–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è) - https://vk.com/im?sel=-213443881", random_id=0)
					try:
						vk.messages.delete(message_ids=mid, delete_for_all=1, peer_id=2000000000 + 2)
					except BaseException:
						pass


		if event.from_user:
			id = event.obj['message']['from_id']
			mid = event.obj['message']['id']
			text = event.obj['message']['text']
			tp = ''
			try:
				tp = event.obj['message']['attachments'][0]['type']
			except BaseException:
				tp = ''
			if tp == 'wall':
				try:
					link = 'https://vk.com/wall' + str(event.obj['message']['attachments'][0]['wall']['from_id']) + '_' + str(event.obj['message']['attachments'][0]['wall']['id'])
					text = link
				except BaseException:
					text= text
			else: 
				text = text

			
			
			TodaysDate = (datetime.now()).strftime('%d.%m.%y')
			LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')
			hour = (datetime.now()).strftime('%H')
			user_get = vk.users.get(user_ids = (id))
			user_get = user_get[0]
			first_name = user_get['first_name']
			last_name = user_get['last_name']
			full_name = first_name + " " + last_name
			name = "@id" + str(id) + "(" + full_name + ")" + ", "
			waitLikeOrComm = ''
			try:
				waitLikeOrComm=open(r'data/waitLikeOrComm.txt',encoding='utf-8').read()
			except BaseException:
				pass
			ZapDeleteId = ''
			try:
				ZapDeleteId=open(r'data/ZapDeleteId.txt', encoding='utf-8').read()
			except BaseException:
				pass
			CommClosed = ''
			try:
				CommClosed=open(r'data/CommClosed.txt', encoding='utf-8').read()
			except BaseException:
				pass
			waitYPusrs = ''
			try:
				waitYPusrs = open('data/wait_YPusrs.txt',encoding='utf-8').read()
			except BaseException:
				pass
			regAutoLike = ''
			try:
				regAutoLike = open('AL/regAutoLike.txt', encoding='utf-8').read()
			except BaseException:
				pass
			UserInAutoLike = ''
			try:
				UserInAutoLike = open('AL/UserInAutoLike.txt', encoding='utf-8').read()
			except BaseException:
				pass
			allId = ''
			try:
				allId = open('data/AllId.txt', encoding='utf-8').read()
			except BaseException:
				pass
			vipUs = ''
			try:
				vipUs = open('data/vip.txt', encoding='utf-8').read()
			except BaseException:
				pass

			# - - - - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤–∏—á–∫–æ–≤ - - - - 
			if str(id) not in allId:
				msstart(id, '–ü—Ä–∏–≤–µ—Ç, '+full_name+'!üëã\n–Ø –≤–∏–∂—É, —á—Ç–æ —Ç—ã –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MutSupp. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –ø–æ—Å—Ç, —Ç–µ–±–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –°–°–´–õ–ö–£ –Ω–∞ –Ω–µ–≥–æ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å—ë, —á—Ç–æ —è —Å–∫–∞–∂—É!\n\nüìù–¢–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–µ–±–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ - https://vk.com/topic-213443881_49767270')                           
				open('data/AllId.txt', 'a', encoding='utf-8').write(str(id)+'\n')
				open('data/'+TodaysDate+'AllId.txt', 'a', encoding='utf-8').write(str(id)+'\n')

			# - - - - –ö–Ω–æ–ø–∫–∞ "–ø–æ–¥–ø–∏—Å–∞–ª—Å—è" –∏ –∑–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –ø–æ—Å—Ç - - - - 
			if text == '–ü–æ–¥–ø–∏—Å–∞–ª—Å—è':
				send_message(id, "–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä—é...")
				text = open(r'data/'+str(id)+'postSubs.txt', encoding='utf-8').read()

			# - - - - AutoLike - - - - 
			if str(id) in regAutoLike and text != '–ù–∞–∑–∞–¥':
				open('AL/regAutoLike.txt', 'w', encoding='utf-8').write(regAutoLike.replace(str(id)+'\n', ''))
				tkn = text[text.find('access_token=')+13:text.find('&')]
				msstart(id, '–ü—Ä–æ–≤–µ—Ä—è—é —Ç–æ–∫–µ–Ω...')
				try:
					session2 = vk_api.VkApi(token=tkn)
					vk2 = session2.get_api()
					longpoll2 = VkLongPoll(session2)

					open(r'AL/tokens.txt', 'a', encoding='utf-8').write(tkn+'\n')
					open(r'AL/'+tkn+'.txt', 'w', encoding='utf-8').write(str(id))
					open(r'AL/'+str(id)+'tkn.txt', 'w', encoding='utf-8').write(tkn)
					open(r'AL/UserInAutoLike.txt', 'a', encoding='utf-8').write(str(id)+'\n')

					msstart(id, '‚úÖ–¢–≤–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –ê–≤—Ç–æ–õ–∞–π–∫–∞! –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å, –Ω–∞–∂–º–∏ –Ω–∞ –ê–≤—Ç–æ–õ–∞–π–∫ –≤ –ü—Ä–æ—Ñ–∏–ª–µ')
				except BaseException:
					print(traceback.format_exc())
					msstart(id, '‚õî–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω')
				return
			if text == '–ê–≤—Ç–æ–õ–∞–π–∫':
				if str(id) not in vipUs:
					keyboard = VkKeyboard(inline=True)
					keyboard.add_openlink_button('–ö—É–ø–∏—Ç—å', 'https://vk.com/id730993538')
					send_message(id, '‚õî –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π VIP-—Å—Ç–∞—Ç—É—Å–∞!', keyboard)
				else:
					if str(id) not in UserInAutoLike:
						open('AL/regAutoLike.txt', 'a', encoding='utf-8').write(str(id)+'\n')
						keyboard = VkKeyboard()
						keyboard.add_button('–ù–∞–∑–∞–¥', VkKeyboardColor.NEGATIVE)
						send_message(id, '–°–∫–∏–Ω—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω. –°–∞–π—Ç - https://vkhost.github.io/\n\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n1. –ù–∞–∂–∏–º–∞–µ—à—å –Ω–∞ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" (–Ω–µ vk.com)\n2. –í—ã–±–∏—Ä–∞–µ—à—å –≤—Å–µ –ø—É–Ω–∫—Ç—ã (–î–æ—Å—Ç—É–ø –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, –°—Ç–∞—Ç—É—Å, –°—Ç–µ–Ω–∞ –∏ —Ç.–¥. –í–°–ï!)\n3. –ù–∞–∂–∏–º–∞–µ—à—å –ø–æ–ª—É—á–∏—Ç—å\n4. –†–∞–∑—Ä–µ—à–∞–µ—à—å –¥–æ—Å—Ç—É–ø\n5. –ö–æ–ø–∏—Ä—É–µ—à—å –í–°–Æ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É (–°—Å—ã–ª–∫—É –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É)\n6. –û—Ç–ø—Ä–∞–≤–ª—è–µ—à—å —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª(–∞)\n\n–ï—Å–ª–∏ –í–ö –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É, —Ç–æ —Å–∫–æ–ø–∏—Ä—É–π –µ—ë, –∏ –≤—Å—Ç–∞–≤—å –≤ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä\n\n–ü–æ–¥–∫–ª—é—á–∞—è –ê–≤—Ç–æ–õ–∞–π–∫, —Ç—ã —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: https://vk.com/topic-213443881_50052623', keyboard)
					else:
						try:
							tkn = open(r'AL/'+str(id)+'tkn.txt', encoding='utf-8').read()
							os.remove('AL/'+tkn+'.txt')
							os.remove('AL/'+str(id)+'tkn.txt')
							tkns = ''
							try:
								tkns = open(r'AL/tokens.txt', encoding='utf-8').read()
							except BaseException:
								pass
							open(r'AL/tokens.txt', 'w', encoding='utf-8').write(tkns.replace(tkn+'\n', ''))
							open(r'AL/UserInAutoLike.txt', 'w', encoding='utf-8').write(UserInAutoLike.replace(str(id)+'\n', ''))
							send_message(id, '‚úÖ –Ø –æ—Ç–∫–ª—é—á–∏–ª —Ç–µ–±—è –æ—Ç –ê–≤—Ç–æ–õ–∞–π–∫–∞')
						except BaseException as e:
							send_message(id, '‚õî–û—à–∏–±–∫–∞: '+str(e))

			# - - - - –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ - - - -
			if text == '–ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª':
				if id in threadForCommUs:
					send_message(id, '–Ø —É–∂–µ –ø—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!!!')
				if id not in threadForCommUs:
					msstart(id, 'üîé–ü—Ä–æ–≤–µ—Ä—è—é. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ—Ç 30—Å –¥–æ 5 –º–∏–Ω—É—Ç...')
					
					if str(id) not in vipUs:
						time.sleep(6)
					threadForCommUs.append(id)
					threading.Thread(target=CommentCheckProcess, args=(id, open(r'data/'+str(id)+'WallsForComm.txt',encoding='utf-8').read().split(), TodaysDate)).start()


			# - - - - –ü—Ä–∏—ë–º –ø–æ—Å—Ç–æ–≤ - - - -
			if 'https://' in text and '—É–¥–∞–ª–∏—Ç—å' not in text.lower() and '–∂–∞–ª–æ–±–∞' not in text.lower():
				if "vk" not in text: # –Ω–µ –ø–æ—Å—Ç –≤–∫
					send_message(id, '‚õî –°—é–¥–∞ –º–æ–∂–Ω–æ –∫–∏–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ü–û–°–¢–´ –í–ö!')
				else:
					text = PostHandler(text)
					text = text.replace(' ','')
					try:
						ForOwnANdItem = text.replace("https://vk.com/wall", "").split("_")
						int(ForOwnANdItem[0])
						int(ForOwnANdItem[1])
					except BaseException:
						send_message(id, '‚õî –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞! (–∫–∏–Ω—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å—Å—ã–ª–∫—É —Ç–∏–ø–∞: "https://vk.com/wall-123456789_123" –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É)')
						return

					if str(id) in CommClosed:
						TodaysWalls =''
						LastWalls=''
						TodaysWallsm=''
						LastWallsm=''
						open(r'data/CommClosed.txt', 'w', encoding='utf-8').write(CommClosed.replace(str(id)+'\n', ''))
						pstsC1 = ''
						try:
							pstsC1 = open('data/'+TodaysDate+'WallForComm.txt', encoding='utf-8').read()
						except BaseException:
							pass
						pstsC = ''
						try:
							pstsC += open('data/'+LastDate+'WallForComm.txt', encoding='utf-8').read()
						except BaseException:
							pass
						pstsC11 = ''
						try:
							pstsC11 = open('data/'+TodaysDate+'WallForComm.txt', encoding='utf-8').read()
						except BaseException:
							pass
						pstsC111 = ''
						try:
							pstsC111 += open('data/'+LastDate+'WallForComm.txt', encoding='utf-8').read()
						except BaseException:
							pass

						if text not in pstsC1+' '+pstsC+' '+pstsC11+' '+pstsC111:
							msstart(id, '‚õî–≠—Ç–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ! (–í–æ–∑–º–æ–∂–Ω–æ –∫—Ç–æ-—Ç–æ —É–∂–µ —É–¥–∞–ª–∏–ª –µ—ë –∏–ª–∏ —Ç—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—ã–µ –∫–æ–º-–∏–∏")')
						else:
							ForOwnANdItem = text.replace("https://vk.com/wall", "").split("_")
							owner_id = int(ForOwnANdItem[0])
							item_id = int(ForOwnANdItem[1])
							try:
								idc = vkG.wall.createComment(owner_id=owner_id,post_id=item_id, message='CheckOnCloseComments', from_group=213443881)['comment_id']
								vkG.wall.deleteComment(owner_id=owner_id,comment_id=idc)
								msstart(id, '‚õî–ó–∞–ø–∏—Å—å ' + text + ' —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!')
							except BaseException:
								open('data/'+TodaysDate+'WallForComm.txt','w', encoding='utf-8').write(pstsC1.replace(text+'\n',''))
								open('data/'+LastDate+'WallForComm.txt','w', encoding='utf-8').write(pstsC.replace(text+'\n',''))
								open('data/'+TodaysDate+'WallForComm.txt','w', encoding='utf-8').write(pstsC11.replace(text+'\n',''))
								open('data/'+LastDate+'WallForComm.txt','w', encoding='utf-8').write(pstsC111.replace(text+'\n',''))
								msstart(id, '‚úÖ–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã. –£–¥–∞–ª—è—é –ø–æ—Å—Ç –∏–∑ –±–∞–∑—ã')


					# –ü–æ—Å—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
					elif str(id) in ZapDeleteId:
						TodaysWalls =''
						LastWalls=''
						TodaysWallsm=''
						LastWallsm=''
						open(r'data/ZapDeleteId.txt', 'w', encoding='utf-8').write(ZapDeleteId.replace(str(id)+'\n', ''))
						walls=''
						try: 
							TodaysWalls = open(r'data/'+TodaysDate+'wall.txt', encoding="utf-8").read().replace(' ', '')
							walls += TodaysWalls
						except BaseException:
							print(traceback.format_exc())
						try:
							LastWalls = open(r'data/'+LastDate+'wall.txt', encoding="utf-8").read().replace(' ', '')
							walls += LastWalls
						except BaseException:
							print(traceback.format_exc())
						pstsC1 = ''
						try:
							pstsC1 = open('data/'+TodaysDate+'WallForComm.txt', encoding='utf-8').read()
						except BaseException:
							pass
						pstsC = ''
						try:
							pstsC += open('data/'+LastDate+'WallForComm.txt', encoding='utf-8').read()
						except BaseException:
							pass

						if text not in walls and text not in pstsC:
							for i in allId.split():
								postsForLikes = ''
								try:
									postsForLikes = open('data/'+i+'postsForLikes.txt', encoding='utf-8').read()
								except BaseException:
									pass
								open('data/'+i+'postsForLikes.txt', 'w',encoding='utf-8').write(postsForLikes.replace(text+'\n', ''))
							msstart(id, '‚õî–≠—Ç–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ! (–í–æ–∑–º–æ–∂–Ω–æ –∫—Ç–æ-—Ç–æ —É–∂–µ —É–¥–∞–ª–∏–ª –µ—ë –∏–ª–∏ —Ç—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")')
						else:
							ForOwnANdItem = text.replace("https://vk.com/wall", "").split("_")
							owner_id = int(ForOwnANdItem[0])
							item_id = int(ForOwnANdItem[1])
							try:
								vkBot1.likes.add(owner_id=owner_id,item_id=item_id,type='post')
								msstart(id, '–ó–∞–ø–∏—Å—å ' + text + ' –Ω–µ —É–¥–∞–ª–µ–Ω–∞!')
							except BaseException:
								open('data/'+TodaysDate+'WallForComm.txt','w', encoding='utf-8').write(pstsC1.replace(text+'\n',''))
								open('data/'+LastDate+'WallForComm.txt','w', encoding='utf-8').write(pstsC.replace(text+'\n',''))
								open(r'data/'+TodaysDate+'wall.txt', 'w', encoding="utf-8").write(TodaysWalls.replace(text+'\n', ''))
								open(r'data/'+LastDate+'wall.txt', 'w', encoding="utf-8").write(LastWalls.replace(text+'\n', ''))
								open(r'data/'+TodaysDate+'wall.txt', 'w', encoding="utf-8").write(TodaysWallsm.replace(text+'\n', ''))
								open(r'data/'+LastDate+'wall.txt', 'w', encoding="utf-8").write(LastWallsm.replace(text+'\n', ''))

								for i in allId.split():
									postsForLikes = ''
									try:
										postsForLikes = open('data/'+i+'postsForLikes.txt', encoding='utf-8').read()
									except BaseException:
										pass
									open('data/'+i+'postsForLikes.txt', 'w',encoding='utf-8').write(postsForLikes.replace(text+'\n', ''))

								msstart(id, '‚úÖ–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞. –£–±–∏—Ä–∞—é –µ—ë –∏–∑ –±–∞–∑—ã')
						
						
					else:
						dltPosts = ''
						try:
							dltPosts = open('data/dltPosts.txt', encoding='utf-8').read()
						except BaseException:
							pass
						if text not in dltPosts:

							group_not_subsc = ''
							if str(id) not in vipUs:
								group_not_subsc = CheckSubscOnGroup(id)

							if group_not_subsc != '':
								keyboard = VkKeyboard(inline=True)
								keyboard.add_openlink_button('–•–æ—á—É –°—é–¥–∞', 'https://vk.com/id730993538')
								keyboard.add_line()
								keyboard.add_button('–ü–æ–¥–ø–∏—Å–∞–ª—Å—è')
								open(r'data/'+str(id)+'postSubs.txt','w',encoding='utf-8').write(text)
								send_message(id, 'üòé–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≥—Ä—É–ø–ø—ã, –∞ –ø–æ—Ç–æ–º —É–∂–µ —Å–∫–∏–Ω—É—Ç—å –ø–æ—Å—Ç:\n\n'+group_not_subsc, keyboard)
							else:	
								keyboard = VkKeyboard()
								keyboard.add_button('‚ù§–õ–∞–π–∫–∏', VkKeyboardColor.POSITIVE)
								keyboard.add_button('üí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', VkKeyboardColor.POSITIVE)
								keyboard.add_button('–ù–∞–∑–∞–¥', VkKeyboardColor.NEGATIVE)
								send_message(id, '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å? (—Å–º. –∫–Ω–æ–ø–∫–∏)', keyboard)
								open('data/waitLikeOrComm.txt', 'a', encoding='utf-8').write(str(id)+'\n')
								open(r'data/'+str(id)+'post.txt','w',encoding='utf-8').write(text)
						else:
							send_message(id, '‚õî –≠—Ç–æ—Ç –ø–æ—Å—Ç –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!')
				

			# - - - - –í—ã–±–æ—Ä –ª–∞–π–∫–æ–≤ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ - - - -
			if str(id) in waitLikeOrComm:
				if text == '‚ù§–õ–∞–π–∫–∏':
					open('data/waitLikeOrComm.txt', 'w', encoding='utf-8').write(waitLikeOrComm.replace(str(id)+'\n', ''))
					TextToList = open(r'data/'+str(id)+'post.txt',encoding='utf-8').read().split()
					for i in TextToList:
						if "https://vk.com/wall" in i:
							banposts = ''
							try:
								banposts=open('data/banposts.txt',encoding='utf-8').read()
							except BaseException:
								pass
							if i in banposts:
								msstart(id, '‚õî–≠—Ç–æ—Ç –ø–æ—Å—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!')
							else:
								usSendPostsToday = ''
								try:
									usSendPostsToday = open('data/'+TodaysDate+'peoples.txt',encoding='utf-8').read()
								except BaseException:
									pass
								addPosts = 0
								try:
									addPosts = int(open('data/addPost'+str(id)+'.txt', encoding='utf-8').read().split()[0])
								except BaseException:
									pass

								vipUs = ''
								try:
									vipUs = open('data/vip.txt', encoding='utf-8').read()
								except BaseException:
									pass

								if str(id) in vipUs:
									usSendPostsToday = usSendPostsToday.replace(str(id), '', 1)

								if str(id) not in usSendPostsToday or addPosts > 0:
									if id in threadForId:
										send_message(id, 'üïë–ü–æ–¥–æ–∂–¥–∏, —è –ø—Ä–æ–≤–µ—Ä—è—é –ª–∞–π–∫–∞–µ—à—å —Ç—ã –∑–∞–ø–∏—Å–∏ –∏–ª–∏ –Ω–µ—Ç...')
									if id not in threadForId:
										if threadCount <15:
											threadCount+=1
											threadForId.append(id)
											
											threading.Thread(target=WallWriting, args=(id, TodaysDate, LastDate, i, )).start()

										if threadCount >=15:
											
											msstart(id, 'üôÅ–í—Å–µ –ø–æ—Ç–æ–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ü–æ–¥–æ–∂–¥–∏ —á—É—Ç—å-—á—É—Ç—å...')
								else:
									msstart(id, "‚õî–¢—ã —Å–µ–≥–æ–¥–Ω—è —É–∂–µ –∫–∏–¥–∞–ª –ø–æ—Å—Ç!")
				if text == 'üí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏':
					
					try:
						uss = ''
						try:
							uss = open(r'data/'+TodaysDate+'UsersForComm.txt',encoding='utf-8').read()
						except BaseException:
							pass
						addPosts = 0
						try:
							addPosts = int(open('data/addPost'+str(id)+'.txt', encoding='utf-8').read().split()[0])
						except BaseException:
							pass

						vipUs = ''
						try:
							vipUs = open('data/vip.txt', encoding='utf-8').read()
						except BaseException:
							pass

						if str(id) in vipUs:
							uss = uss.replace(str(id), '', 1)
						
						if str(id) not in uss or addPosts > 0:
							
							msg = ''
							usWallsForComm = 'None'
							try:
								usWallsForComm = msg = open(r'data/'+str(id)+'WallsForComm.txt',encoding='utf-8').read()
							except BaseException:
								pass
							if 'https://vk.com/wall' not in usWallsForComm:
								usWallsForComm = 'None'
							wallsComm = []

							if 'None' in usWallsForComm:

								wallsComm = GetWallsComm(id)

								msg = ''
								for i in wallsComm:
									msg += i+'\n'
								open(r'data/'+str(id)+'WallsForComm.txt', 'w',encoding='utf-8').write(msg)
							if 'None' not in usWallsForComm:
								wallsComm.append('none')
							
							if len(wallsComm) == 0:
								text =open(r'data/'+str(id)+'post.txt',encoding='utf-8').read()
								ForOwnANdItem = text.replace("https://vk.com/wall", "").split("_")
								owner_id = ForOwnANdItem[0]
								item_id = ForOwnANdItem[1]
								open('data/PostCom_From'+str(id)+'_'+TodaysDate+'.txt', 'w', encoding='utf-8').write(str('https://vk.com/wall'+owner_id+'_'+item_id))
								open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', 'w', encoding='utf-8').write(str('https://vk.com/wall'+owner_id+'_'+item_id))
								open('data/wall'+owner_id+'_'+item_id+'COMM.txt', 'w', encoding='utf-8').write(str(id))
								open(r'data/'+str(id)+'WallsForComm.txt', 'w',encoding='utf-8').write('None')
								
								

								open(r'data/'+TodaysDate+'WallForComm.txt','a',encoding='utf-8').write(text+'\n')

								addPosts = 0
								try:
									addPosts = int(open('data/addPost'+str(id)+'.txt', encoding='utf-8').read().split()[0])
								except BaseException:
									pass
								if addPosts > 0:
									open('data/addPost'+str(id)+'.txt', 'w', encoding='utf-8').write(str(addPosts - 1))
								msstart(id, '‚úÖ–¢–≤–æ—è –∑–∞–ø–∏—Å—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!')
								open('MSW/SendPostsUsrs.txt', 'a', encoding='utf-8').write(str(id)+'\n')


								vipUs = ''
								try:
									vipUs = open('data/vip.txt', encoding='utf-8').read()
								except BaseException:
									pass

								if str(id) not in vipUs:
									threading.Thread(target=SendPostsAllUs, args=(id,text,'üí¨ –ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ –ø–æ—Å—Ç!\n'+text, 1, )).start()
									
								else:
									open('data/vipPosts.txt', 'a', encoding='utf-8').write(text+'\n')
									threading.Thread(target=SendPostsAllUs, args=(id,text,'üíéüí¨ –ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ –ø–æ—Å—Ç!\n'+text, 1, )).start()
									

								
									
							if len(wallsComm) > 0:
								
								keyboard = VkKeyboard(inline=True)
								keyboard.add_button('–ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª')
								keyboard.add_button('–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å')
								keyboard.add_line()
								keyboard.add_button('–ñ–∞–ª–æ–±–∞')

								ms = ''
								n=0
								for cc in msg.split():
									n+=1
									vPsts = ''
									try:
										vPsts = open('data/vipPosts.txt',encoding='utf-8').read()
									except BaseException:
										pass
									if cc in vPsts:
										ms += 'üíé '+cc+'\n'
									else:	
										ms += str(n)+'. '+cc+'\n'

								send_message(id, '‚õî–°–Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ —ç—Ç–∏—Ö –∑–∞–ø–∏—Å—è—Ö (–ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ –∏ —Å–æ —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã!):\n\n'+ms+'\n\n@id730993538(*–û–±—Ä–∞—Ç–∏—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É), –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Å—Ç–∞–º–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å" –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–±–µ –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã', keyboard)					
						else:
							send_message(id, '‚õî–°–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ –ø–æ–¥–∫–ª—é—á–∞–ª –∑–∞–ø–∏—Å—å –∫ —Å–∏—Å—Ç–µ–º–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤! –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞!')	

					except BaseException as e:
						print(traceback.format_exc())
						send_message(id,'–û—à–∏–±–∫–∞: '+ str(e))


			if text == '–ü—Ä–æ–ª–∞–π–∫–∞–ª':
				TextToList = open(r'data/'+str(id)+'post.txt',encoding='utf-8').read().split()
				for i in TextToList:
					if "https://vk.com/wall" in i:
						banposts = ''
						try:
							banposts=open('data/banposts.txt',encoding='utf-8').read()
						except BaseException:
							pass
						if i in banposts:
							msstart(id, '‚õî–≠—Ç–æ—Ç –ø–æ—Å—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!')
						else:
							usSendPostsToday = ''
							try:
								usSendPostsToday = open('data/'+TodaysDate+'peoples.txt',encoding='utf-8').read()
							except BaseException:
								pass
							addPosts = 0
							try:
								addPosts = int(open('data/addPost'+str(id)+'.txt', encoding='utf-8').read().split()[0])
							except BaseException:
								pass

							vipUs = ''
							try:
								vipUs = open('data/vip.txt', encoding='utf-8').read()
							except BaseException:
								pass

							if str(id) in vipUs:
								usSendPostsToday = usSendPostsToday.replace(str(id), '', 1)
								usSendPostsToday = usSendPostsToday.replace(str(id), '', 1)
								usSendPostsToday = usSendPostsToday.replace(str(id), '', 1)

							if str(id) not in usSendPostsToday or addPosts > 0:
								if id in threadForId:
									send_message(id, 'üïë–ü–æ–¥–æ–∂–¥–∏, —è –ø—Ä–æ–≤–µ—Ä—è—é –ª–∞–π–∫–∞–µ—à—å —Ç—ã –∑–∞–ø–∏—Å–∏ –∏–ª–∏ –Ω–µ—Ç...')
								if id not in threadForId:
									if threadCount <15:
										threadCount+=1
										threadForId.append(id)
										
										threading.Thread(target=WallWriting, args=(id, TodaysDate, LastDate, i, )).start()

									if threadCount >=15:
										
										msstart(id, 'üôÅ–í—Å–µ –ø–æ—Ç–æ–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ü–æ–¥–æ–∂–¥–∏ —á—É—Ç—å-—á—É—Ç—å...')
							else:
								msstart(id, "‚õî–¢—ã —Å–µ–≥–æ–¥–Ω—è —É–∂–µ –∫–∏–¥–∞–ª –ø–æ—Å—Ç!")


			if text == '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç':
				send_message(id, 'üóëÔ∏è –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –ø–æ—Å—Ç–æ–≤, —Ç–æ –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–ª–µ–¥. –∫–æ–º–∞–Ω–¥—É: \n"—É–¥–∞–ª–∏—Ç—å –ó–î–ï–°–¨_–°–°–´–õ–ö–ê"')


			if '—É–¥–∞–ª–∏—Ç—å' in text.lower() and '–ø–æ—Å—Ç' not in text.lower():
				psts = ''
				try:
					psts += open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read() + '\n'
				except BaseException:
					pass 
				try:
					psts += open('data/Post_From'+str(id)+'_'+LastDate+'.txt', encoding='utf-8').read()
				except BaseException:
					pass
				if text.split()[1] in psts:
					try:
						tdPsts = ''
						try:
							tdPsts = open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read()
						except BaseException:
							pass
						if text.split()[1] in tdPsts:
							try:
								open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', 'w', encoding='utf-8').write(open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read().replace(str(text.split()[1])+'\n', ''))
							except BaseException:
								pass
							try:
								open('data/'+TodaysDate+'peoples.txt','w',encoding='utf-8').write(open('data/'+TodaysDate+'peoples.txt',encoding='utf-8').read().replace(str(id)+'\n', ''))
							except BaseException:
								pass
						else:
							try:
								open('data/Post_From'+str(id)+'_'+LastDate+'.txt', 'w', encoding='utf-8').write(open('data/Post_From'+str(id)+'_'+LastDate+'.txt', encoding='utf-8').read().replace(str(text.split()[1])+'\n', ''))
							except BaseException:
								pass
							try:
								open('data/'+LastDate+'peoples.txt','w',encoding='utf-8').write(open('data/'+LastDate+'peoples.txt',encoding='utf-8').read().replace(str(id)+'\n', ''))
							except BaseException:
								pass
						for i in allId.split():
							postsForLikes = ''
							try:
								postsForLikes = open('data/'+i+'postsForLikes.txt', encoding='utf-8').read()
							except BaseException:
								pass
							open('data/'+i+'postsForLikes.txt', 'w',encoding='utf-8').write(postsForLikes.replace(text.split()[1]+'\n', ''))
						PostDelete(text.split()[1], id)
						send_message(id, "‚úÖ–ü–æ—Å—Ç —É–¥–∞–ª—ë–Ω!")
					except BaseException:
						send_message(id, '‚õî–û—à–∏–±–∫–∞')
						print(traceback.format_exc())

				else:
					send_message(id, '‚õî –≠—Ç–æ –Ω–µ —Ç–≤–æ–π –ø–æ—Å—Ç –∏–ª–∏ —Ç—ã —Å–∫–∏–Ω—É–ª —ç—Ç–æ—Ç –ø–æ—Å—Ç –ø–æ–∑–∂–µ 2-—Ö –¥–Ω–µ–π –Ω–∞–∑–∞–¥')


			if text == '–ó–∞–∫—Ä—ã—Ç—ã–µ –∫–æ–º-–∏–∏':
				try:
					open(r'data/CommClosed.txt', 'a', encoding='utf-8').write(str(id)+'\n')
				except BaseException:
					open(r'data/CommClosed.txt', 'w', encoding='utf-8').write(str(id)+'\n')
				keyboard = VkKeyboard()
				keyboard.add_callback_button('–ù–∞–∑–∞–¥', VkKeyboardColor.NEGATIVE, payload=4)
				send_message(id, '–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–ø–∏—Å—å —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏', keyboard)


			if text == '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å':
				keyboard = VkKeyboard(inline=True)
				keyboard.add_button('–ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª')
				keyboard.add_button('–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å')
				send_message(id, 'üïë –°–µ–π—á–∞—Å –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Å–∫–∏–Ω—É—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã...')
				wallsComm = GetWallsComm(id)
				msg = ''
				for i in wallsComm:
					msg += i+'\n'
				open(r'data/'+str(id)+'WallsForComm.txt', 'w',encoding='utf-8').write(msg)

				ms = ''
				n=0
				for cc in msg.split():
					n+=1
					vPsts = ''
					try:
						vPsts = open('data/vipPosts.txt',encoding='utf-8').read()
					except BaseException:
						pass
					if cc in vPsts:
						ms += 'üíé '+cc+'\n'
					else:	
						ms += str(n)+'. '+cc+'\n'

				send_message(id, '‚õî –í–æ—Ç –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã:\n\n'+ms+'\n\n@id730993538(*–û–±—Ä–∞—Ç–∏—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É), –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Å—Ç–∞–º–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å" –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–±–µ –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã', keyboard)				


			if text == '–ñ–∞–ª–æ–±–∞':
				send_message(id, '&#128483; –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã –Ω–∞–ø–∏—à–∏ —Å–ª–µ–¥—É—é—â–µ–µ:\n–∂–∞–ª–æ–±–∞ –°–°–´–õ–ö–ê_–ù–ê_–ü–û–°–¢ –ü–†–ò–ß–ò–ù–ê\n\n*–û—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±—ã –Ω–∞ –ø–æ—Å—Ç –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã –∫–∞—Ä–∞–µ—Ç—Å—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π')


			if '–∂–∞–ª–æ–±–∞ ' in text.lower() and len(text.split()) >= 2:
				try:
					post = text.split()[1]
					ForOwnANdItem = post.replace("https://vk.com/wall", "").split("_")

					owner_id = None
					item_id = None
					try:
						owner_id = ForOwnANdItem[0]
						item_id = ForOwnANdItem[1]
					except BaseException:
						send_message(id, '‚õî –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞!')
						return
					msg = text.replace('–∂–∞–ª–æ–±–∞ ', '').replace(post, '')
					rprts = ''
					dltPosts = ''
					try:
						dltPosts = open('data/dltPosts.txt', encoding='utf-8').read()
					except BaseException:
						pass
					if post in dltPosts:
						send_message(id, '–ü–æ—Å—Ç —É–∂–µ —É–¥–∞–ª—ë–Ω')
					else:
						try:
							rprts = open('data/reports'+owner_id+'_'+item_id+'.txt', encoding='utf-8').read()
						except BaseException as e:
							pass
						if str(id) not in rprts:
							open('data/reports'+owner_id+'_'+item_id+'.txt', 'a',encoding='utf-8').write(str(id)+'\n')
							rprts += str(id)+'\n'
							send_messageCHAT(3, '&#128483; –ñ–∞–ª–æ–±–∞ –æ—Ç @id'+str(id)+' –Ω–∞ –ø–æ—Å—Ç '+ post+' —Å –ø—Ä–∏—á–∏–Ω–æ–π: '+msg+'. –ö–æ–ª-–≤–æ –∂–∞–ª–æ–± –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: '+str(len(rprts.split())) + '\n\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è 6 –∂–∞–ª–æ–±, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "üö´–£–¥–∞–ª–∏—Ç—å"')
							if len(rprts.split()) >= 6:
								PostDelete(post)
								send_messageCHAT(3, '&#10060; –ü–æ—Å—Ç —É–¥–∞–ª—ë–Ω –∏–∑-–∑–∞ –∂–∞–ª–æ–±: '+post)

							send_message(id, '‚úÖ –ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!')
						else:
							send_message(id, '‚õî –¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∂–∞–ª–æ–±—É –Ω–∞ —ç—Ç–æ—Ç –ø–æ—Å—Ç!')
				except BaseException as e:
					send_message(id, '‚õî–û—à–∏–±–∫–∞: '+str(e))

			if text == '–ü–æ–¥–ø–∏—Å–∞–ª—Å—è':
				pst = open(r'data/'+str(id)+'postSubs.txt', encoding='utf-8').read()

			# - - - - –ö–ª–∏–µ–Ω—Ç—ã, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ Callback –∫–Ω–æ–ø–∫–∏ - - - -

			if text == 'üë§–ü—Ä–æ—Ñ–∏–ª—å':
				keyboard = VkKeyboard(inline=True)
				keyboard.add_button('–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç')
				psts = ''
				try:
					psts += open('data/Post_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read() + '\n'
				except BaseException:
					pass 
				try:
					psts += open('data/Post_From'+str(id)+'_'+LastDate+'.txt', encoding='utf-8').read()
				except BaseException:
					pass

				pstsCom = ''
				try:
					pstsCom += open('data/PostCom_From'+str(id)+'_'+TodaysDate+'.txt', encoding='utf-8').read() + '\n'
				except BaseException:
					pass 
				try:
					pstsCom += open('data/PostCom_From'+str(id)+'_'+LastDate+'.txt', encoding='utf-8').read()
				except BaseException:
					pass

				vipStat = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

				if str(id) in vipUs:
					vipStat = '–¥–æ '+open('data/vip'+str(id)+'.txt', encoding='utf-8').read()

				send_message(id, name+'—Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\nüî§ –°–ø–µ—Ü. –ê–π–¥–∏: '+str(id)+'\nüíéVIP-—Å—Ç–∞—Ç—É—Å: '+vipStat+'\nüë•–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π MutSupp: '+str(len(allId.split()))+'\n\nüìù–¢–≤–æ–∏ –ø–æ—Å—Ç—ã –∑–∞ 2 –¥–Ω—è:\n\n–î–ª—è –ª–∞–π–∫–æ–≤‚ù§:\n'+psts+'\n\n–î–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤üí¨:\n'+pstsCom, keyboard)


			if text == 'üí∏–¶–µ–Ω—ã':
				keyboard = VkKeyboard(inline=True)
				keyboard.add_openlink_button('–ö—É–ø–∏—Ç—å —á—Ç–æ-—Ç–æ', 'https://vk.com/id730993538')
				vk.messages.send(user_id=id, message='üí∏–¶–µ–Ω—ã —É—Å–ª—É–≥:\n\n‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—É (–Ω–∞ —Ç–≤–æ—é –≥—Ä—É–ø–ø—É –±—É–¥—É—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ MutSupp) - 39—Ä/–¥–µ–Ω—å\n‚Ä¢ –î–æ–ø. –ø–æ—Å—Ç (—Ç—ã –º–æ–∂–µ—à—å —Å–∫–∏–Ω—É—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø–æ—Å—Ç) - 19—Ä/–ø–æ—Å—Ç\n‚Ä¢ VIP-—Å—Ç–∞—Ç—É—Å (–ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏ - https://vk.com/topic-213443881_49983313) - 99—Ä/–º–µ—Å\n\n@id730993538(*–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç*)', random_id=0, keyboard=keyboard.get_keyboard())  


			if text == '–ù–∞–∑–∞–¥':
				open('AL/regAutoLike.txt', 'w', encoding='utf-8').write(regAutoLike.replace(str(id)+'\n', ''))
				open(r'data/waitLikeOrComm.txt','w',encoding='utf-8').write(waitLikeOrComm.replace(str(id)+'\n',''))
				CommOnUsts = ''
				try:
					CommOnUsts=open(r'data/CommOnUsts.txt',encoding='utf-8').read()
				except BaseException:
					pass
				open('data/CommOnUsts.txt','w',encoding='utf-8').write(CommOnUsts.replace(str(id)+'\n', ''))
				ZapDeleteId = ''
				try:
					ZapDeleteId = open(r'data/ZapDeleteId.txt', encoding='utf-8').read()
				except BaseException:
					print(traceback.format_exc())
				CommClosed = ''
				try:
					CommClosed = open(r'data/CommClosed.txt', encoding='utf-8').read()
				except BaseException:
					print(traceback.format_exc())
				open(r'data/ZapDeleteId.txt', 'w', encoding='utf-8').write(ZapDeleteId.replace(str(id)+'\n', ''))
				open(r'data/CommClosed.txt', 'w', encoding='utf-8').write(CommClosed.replace(str(id)+'\n', ''))
				msstart(id, '–û–∫')


			if text == '–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞':
				try:
					open(r'data/ZapDeleteId.txt', 'a', encoding='utf-8').write(str(id)+'\n')
				except BaseException:
					print(traceback.format_exc())
					open(r'data/ZapDeleteId.txt', 'w', encoding='utf-8').write(str(id)+'\n')
				keyboard = VkKeyboard()
				keyboard.add_callback_button('–ù–∞–∑–∞–¥', VkKeyboardColor.NEGATIVE, payload=4)
				send_message(id, '–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—É—é –∑–∞–ø–∏—Å—å', keyboard)


def DeleteDontActiveUsrs111():
	uss = []
	dts = []
	for i in range(1,25):
		dts.append( ((datetime.now()) - timedelta(days=i)).strftime('%d.%m.%y') )
	dts.append( (datetime.now()).strftime('%d.%m.%y') )
	for d in dts:
		ppls = ''
		try:
			ppls = open('data/'+d+'peoples.txt',encoding='utf-8').read()
		except BaseException:
			pass
		for i in ppls.split():
			uss.append(i)
		ppls1 = ''
		try:
			ppls1 = open('data/'+d+'UsersForComm.txt',encoding='utf-8').read()
		except BaseException:
			pass
		for i in ppls1.split():
			uss.append(i)
	allId = ''
	try:
		allId = open('data/AllId.txt', encoding='utf-8').read()
	except BaseException:
		pass
	for i in allId.split():
		allId1 = ''
		try:
			allId1 = open('data/AllId.txt', encoding='utf-8').read()
		except BaseException:
			pass
		if i not in uss:
			try:
				send_message(i, '‚õî –Ø —É–¥–∞–ª—è—é —Ç–µ–±—è –∏–∑ –±–∞–∑—ã, —Ç–∞–∫ –∫–∞–∫ —Ç—ã –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –ø–æ—Å—Ç—ã')
			except BaseException:
				pass
			open('data/AllId.txt', 'w',encoding='utf-8').write(allId1.replace(i+'\n', ''))


def PostHandler(text):
    text = text.replace('.ru', '.com').replace('.me', '.com').replace('https://m.vk.com/', 'https://vk.com/').replace('https://m.vk.ru/', 'https://vk.com/').replace('https://m.vk.me/', 'https://vk.com/')
    frgm = ['?w=', '?hash=', '?access_key']
    for i in frgm:
        text = text.split(i)[0]
    return text


def SendingDontLikedAndCommPosts():
	TodaysDate = (datetime.now()).strftime('%d.%m.%y')
	LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')
	vipUs = ''
	try:
		vipUs = open('data/vip.txt', encoding='utf-8').read().split()
	except BaseException:
		pass

	for idw in vipUs:
		try:

			walls = ''
			try: 
				walls += open(r'data/'+TodaysDate+'wall.txt', encoding="utf-8").read().replace(' ', '')
			except BaseException:
				pass
			try:
				walls += open(r'data/'+LastDate+'wall.txt', encoding="utf-8").read().replace(' ', '')
			except BaseException:
				pass

			l = walls.split()

			
			checkLiked = CheckLikes(int(idw), l, random.choice([vkSrv1,vkSrv2,vkSrv3,vkSrv4,vkSrv5,vkSrv6]))

			if checkLiked == True: # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ–ª–∞–π–∫–∞–ª –≤—Å–µ –∑–∞–ø–∏—Å–∏
				send_message(idw, "üíæ –£ —Ç–µ–±—è –ø—Ä–æ–ª–∞–π–∫–∞–Ω—ã –≤—Å–µ –ø–æ—Å—Ç—ã! :)")

			else: # –ß–µ–ª–æ–≤–µ–∫ –Ω–µ –ø—Ä–æ–ª–π–∫–∞–ª –∑–∞–ø–∏—Å–∏
				keyboard = VkKeyboard(inline=True)
				keyboard.add_callback_button('–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞', VkKeyboardColor.SECONDARY, payload=3)
				keyboard.add_button('–ñ–∞–ª–æ–±–∞')

				walls = ''
				n=0
				for w in checkLiked:
					n += 1
					vPsts = ''
					try:
						vPsts = open('data/vipPosts.txt',encoding='utf-8').read()
					except BaseException:
						pass
					if w in vPsts:
						walls += 'üíé' + ' ' + w + '\n'
					else:
						walls += str(n) + '. ' + w + '\n'


				send_message(idw, "üíæ –í–æ—Ç —Ç–≤–æ–∏ –Ω–µ –ø—Ä–æ–ª–∞–π–∫–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã:\n\n"+walls, keyboard)

		except BaseException as e: 
			print(e)


def AutoLike(post):
	tkns = ''
	try:
		tkns = open(r'AL/tokens.txt', encoding='utf-8').read()
	except BaseException:
		pass
	tkns1 = tkns.split()
	for tkn in tkns1:
		err = False
		v = None
		try:
			v = vk_api.VkApi(token=tkn).get_api()		
			VkLongPoll(vk_api.VkApi(token=tkn))	
		except BaseException:

			id = open('AL/'+tkn+'.txt', encoding='utf-8').read()
			err = True
			os.remove('AL/'+str(id)+'tkn.txt')
			os.remove('AL/'+tkn+'.txt')
			tkns = ''
			try:
				tkns = open(r'AL/tokens.txt', encoding='utf-8').read()
			except BaseException:
				pass
			open(r'AL/tokens.txt', 'w', encoding='utf-8').write(tkns.replace(tkn+'\n', ''))
			open(r'AL/UserInAutoLike.txt', 'w', encoding='utf-8').write(UserInAutoLike.replace(str(id)+'\n', ''))
			send_message(id, '‚õî –Ø –æ—Ç–∫–ª—é—á–∏–ª —Ç–µ–±—è –æ—Ç –ê–≤—Ç–æ–õ–∞–π–∫–∞. –ü—Ä–∏—á–∏–Ω–∞: –æ—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞')
			
		if err == False:
			ForOwnANdItem = post.replace("https://vk.com/wall", "").split("_")
			owner_id = ForOwnANdItem[0]
			item_id = ForOwnANdItem[1]
			time.sleep(random.randint(3,12))
			v.likes.add(type='post', owner_id=owner_id, item_id=item_id)


def CheckComments(id, posts, vkCheck):
	vk = vkCheck
	chunks = [posts[i:i+8] for i in range(0, len(posts), 8)] # –°–æ–∑–¥–∞–Ω–∏–µ —á–∞–Ω–∫–æ–≤ –ø–æ 8 –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–º
	psts = {}
	cmUsers = {}

	for c in chunks:
		script = '''var comments = [];'''
		
		n=0
		for i in c:
			n+=1
			psts[n] = i
			ForOwnANdItem = i.replace("https://vk.com/wall", "").split("_") 
			owner_id = ForOwnANdItem[0]
			post_id = ForOwnANdItem[1]

			# –®–∞–±–ª–æ–Ω —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
			script += '''
				var post_id = %s;
				var max_count = 100;
				var offset = %s;
				 var owner = %s;
				comments = comments + {"https://vk.com/wall%s_%s": "https://vk.com/wall%s_%s"};
				var count = API.wall.getComments({"owner_id": owner, "post_id": post_id, "offset": offset, "count": max_count}).count;
				while(offset < count) {
					comments = comments + API.wall.getComments({"owner_id": owner, "post_id": post_id, "offset": offset, "count": max_count}).items;
					offset = offset + max_count;
					}
			   

			''' % (post_id, 0, owner_id, owner_id,post_id, owner_id,post_id)

		# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
		script += '''return comments;'''
		cm = vk.execute(code=script)
		n1 = 0
		
		post = None
		for m in cm:
			if 'https://vk.com/wall' in m:
				n1 += 1
				cmUsers[psts[n1]] = []
				post = psts[n1]
			else:
				cmUsers[psts[n1]].append(cm[m]['from_id'])




	# –ü–µ—á–∞—Ç–∞–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
	notLikedPsts = []
	for i in cmUsers:
		if id not in cmUsers[i]:
			notLikedPsts.append(i)
	if len(notLikedPsts) == 0:
		return True
	else:
		return notLikedPsts


def CheckLikes(id, posts, vkCheck):
	chunks = [posts[i:i+9] for i in range(0, len(posts), 9)]
	psts = {}
	LkUs = {}
	psts1 = []
	for c in chunks:
		code = '''var likes = [];'''
		n=0
		for p in c:
			if p not in psts1:
				n+=1
				psts[n] = p
				psts1.append(p)
				ForOwnANdItem = p.replace("https://vk.com/wall", "").split("_") 
				owner_id = ForOwnANdItem[0]
				post_id = ForOwnANdItem[1]
				code += '''
					var post_id = %s;
					var max_count = 1000;
					var offset = %s;
					var owner = %s;
					likes = likes + {"https://vk.com/wall%s_%s": "https://vk.com/wall%s_%s"};
					var count = API.likes.getList({"owner_id": owner, "item_id": post_id, "offset": offset, "count": max_count, "type": "post"}).count;
					while(offset < count) {
						likes = likes + API.likes.getList({"owner_id": owner, "item_id": post_id, "offset": offset, "count": max_count, "type": "post"}).items;
						offset = offset + max_count;
						}
				  
				''' % (post_id, 0, owner_id, owner_id,post_id, owner_id,post_id)
		code += '''return likes;'''
		result = vkCheck.execute(code=code)
		vkCheck1 = random.choice([vkSrv1,vkSrv2,vkSrv3,vkSrv4,vkSrv5,vkSrv6])
		if vkCheck1 != vkCheck:
			vkCheck = vkCheck1

		n1 = 0
		post = None
		for i in result:
			if 'https://vk.com/wall' in str(result[i]):
				n1 += 1
				post = psts[n1]
				LkUs[post] = []
			else:
				LkUs[post].append(result[i])

	notLikedPsts = []
	for i in LkUs:
		if id not in LkUs[i]:
			notLikedPsts.append(i)
	if len(notLikedPsts) == 0:
		return True
	else:
		return notLikedPsts


def getUsersForMsg(usrs):
	RTRN = {}
	n1 = 1
	n = 1
	uss = []
	for i in usrs: 
		if len(uss) <= 99:
			uss.append(i)
			n+=1
		if len(uss) > 99 or n > len(usrs):
			msg = ''
			for c in uss:
				if len(msg) == 0:
					msg += c
				else:
					msg += ', ' + c
			RTRN[n1] = msg 
			n1 += 1
			uss = []
	return RTRN


def SendAllUsMsg(usrs, message, keyboard=None):
	code = None
	for i in usrs:
		try:
			if keyboard == None:
				req = vk.messages.send(user_ids=usrs[i], message=message, random_id=0)
				try:
					for c in req:
						if c['error']['code'] == 901:
							idb = str(c['peer_id'])
							print('–ó–∞–±–ª–æ–∫–∞–ª!!!!1 - ' + str(c['peer_id']))

							allUs = ''
							try:
								allUs = open('data/AllId.txt', encoding='utf-8').read()
							except BaseException:
								pass

							open('data/AllId.txt', 'w', encoding='utf-8').write(allUs.replace(str(idb)+'\n', ''))

							InvitedUsrsID = ''
							try:
								InvitedUsrsID = open('MSW/IvitedUsrs.txt', encoding='utf-8').read()
							except BaseException:
								pass
							if str(idb) in InvitedUsrsID:
								open('MSW/IvitedUsrs.txt', 'w', encoding='utf-8').write(InvitedUsrsID.replace(str(idb)+'\n', ''))
								a = vkG.messages.getChatUsers(chat_id=36)
								for userid in a:
									inv = ''
									try:
										inv = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read()
									except BaseException:
										pass

									if str(idb) in inv:
										open('MSW/'+str(userid)+'IvitedUsrs.txt', 'w', encoding='utf-8').write(inv.replace(str(idb)+'\n', ''))
										spUs = ''
										try:
											spUs = open('MSW/SendPostsUsrs.txt', encoding='utf-8').read()
										except BaseException:
											pass
										open('MSW/SendPostsUsrs.txt', 'w', encoding='utf-8').write(spUs.replace(str(idb)+'\n',''))
										send_messageCHAT(6, 'üö´ @id' + userid + '—è —É–¥–∞–ª–∏–ª –µ–≥–æ –∏–∑ –±–∞–∑—ã, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª MutSupp - @id'+str(idb))

				except BaseException:
					pass


			else:
				req = vk.messages.send(user_ids=usrs[i], message=message, random_id=0, keyboard=keyboard.get_keyboard())
				try:
					for c in req:
						if c['error']['code'] == 901:
							idb = str(c['peer_id'])
							print('–ó–∞–±–ª–æ–∫–∞–ª!!!!1 - ' + str(c['peer_id']))

							allUs = ''
							try:
								allUs = open('data/AllId.txt', encoding='utf-8').read()
							except BaseException:
								pass

							open('data/AllId.txt', 'w', encoding='utf-8').write(allUs.replace(str(idb)+'\n', ''))

							InvitedUsrsID = ''
							try:
								InvitedUsrsID = open('MSW/IvitedUsrs.txt', encoding='utf-8').read()
							except BaseException:
								pass
							if str(idb) in InvitedUsrsID:
								open('MSW/IvitedUsrs.txt', 'w', encoding='utf-8').write(InvitedUsrsID.replace(str(idb)+'\n', ''))
								a = vkG.messages.getChatUsers(chat_id=36)
								for userid in a:
									inv = ''
									try:
										inv = open('MSW/'+str(userid)+'IvitedUsrs.txt', encoding='utf-8').read()
									except BaseException:
										pass

									if str(idb) in inv:
										open('MSW/'+str(userid)+'IvitedUsrs.txt', 'w', encoding='utf-8').write(inv.replace(str(idb)+'\n', ''))
										spUs = ''
										try:
											spUs = open('MSW/SendPostsUsrs.txt', encoding='utf-8').read()
										except BaseException:
											pass
										open('MSW/SendPostsUsrs.txt', 'w', encoding='utf-8').write(spUs.replace(str(idb)+'\n',''))
										user_get = vk.users.get(user_ids = (userid))
										user_get = user_get[0]
										first_name = user_get['first_name']
										last_name = user_get['last_name']
										full_name = first_name + " " + last_name
										name = "@id" + str(userid) + "(" + full_name + ")" + ", "
										send_messageCHAT(6, 'üö´ ' + name + '—è —É–¥–∞–ª–∏–ª –µ–≥–æ –∏–∑ –±–∞–∑—ã, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª MutSupp - @id'+str(idb))
				except BaseException:
					pass


		except BaseException:
			print(traceback.format_exc())


def PostDelete(post, id=None): # –£–¥–∞–ª—è–µ—Ç –ø–æ—Å—Ç (–µ—Å–ª–∏ id –Ω–∏—á–µ–º—É –Ω–µ —Ä–∞–≤–µ–Ω, —Ç–æ –ø–æ—Å—Ç —É–¥–∞–ª—è–µ—Ç—Å—è —É –≤—Å–µ—Ö)

	if id == None: # All
		open('data/dltPosts.txt', 'a', encoding='utf-8').write(post+'\n')
		dates = []
		now = datetime.now()
		for i in range(15):
			i+=1
			dates.append((now - timedelta(days=i)).strftime('%d.%m.%y'))
		dates.append(now.strftime('%d.%m.%y'))
		for dt in dates:

			try:
				usrs = open('data/AllId.txt', encoding='utf-8').read().split()
				for o in usrs:
					psts = ''
					try:
						psts = open('data/'+str(o)+'WallsForComm.txt', encoding='utf-8').read()
					except BaseException:
						pass
					open('data/'+str(o)+'WallsForComm.txt','w', encoding='utf-8').write(psts.replace(post+'\n','')) 
			except BaseException:
				pass

			psts = ''
			try:
				psts = open('data/'+dt+'wall.txt', encoding='utf-8').read()
			except BaseException:
				pass
			pstsC = ''
			try:
				pstsC = open('data/'+dt+'WallForComm.txt', encoding='utf-8').read()
			except BaseException:
				pass
			if post in pstsC:
				open('data/'+dt+'WallForComm.txt','w', encoding='utf-8').write(pstsC.replace(post+'\n',''))

				
			if post in psts:
				open('data/'+dt+'wall.txt','w', encoding='utf-8').write(psts.replace(post+'\n',''))

					
	else: # Not All
		dates = []
		now = datetime.now()
		for i in range(2):
			i+=1
			dates.append((now - timedelta(days=i)).strftime('%d.%m.%y'))
		dates.append(now.strftime('%d.%m.%y'))
		for dt in dates:

			try:
				usrs = open('data/AllId.txt', encoding='utf-8').read().split()
				for o in usrs:
					psts = ''
					try:
						psts = open('data/'+str(o)+'WallsForComm.txt', encoding='utf-8').read()
					except BaseException:
						pass
					open('data/'+str(o)+'WallsForComm.txt','w', encoding='utf-8').write(psts.replace(post+'\n','')) 
			except BaseException:
				pass

			psts = ''
			try:
				psts = open('data/'+dt+'wall.txt', encoding='utf-8').read()
			except BaseException:
				pass
			pstsC = ''
			try:
				pstsC = open('data/'+dt+'WallForComm.txt', encoding='utf-8').read()
			except BaseException:
				pass
			if post in pstsC:
				open('data/'+dt+'WallForComm.txt','w', encoding='utf-8').write(pstsC.replace(post+'\n',''))

				
			if post in psts:
				open('data/'+dt+'wall.txt','w', encoding='utf-8').write(psts.replace(post+'\n',''))


def SmsSend(AllIdInList, text):
	SendAllUsMsg(getUsersForMsg(AllIdInList), 'üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '+text)


def SendPostsAllUs(id,i, text, likeOrComm): # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º 
	AllId = ''
	try:
		AllId+=open('data/AllId.txt', encoding='utf-8').read()
	except BaseException as e:
		print(e)

	AllIdInList = AllId.replace(str(id),'').split()
	AllIdInList1 = []
	try:

		for c in AllIdInList:
			if c not in AllIdInList1:
				AllIdInList1.append(c)

		keyboard = VkKeyboard(inline=True)
		keyboard.add_callback_button('–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞', VkKeyboardColor.SECONDARY, payload=3)

		SendingPostsLike = ''
		try:
			SendingPostsLike = open('data/SendingPostsLike.txt', encoding='utf-8').read()
		except BaseException:
			pass
		SendingPostsComm = ''
		try:
			SendingPostsComm = open('data/SendingPostsComm.txt', encoding='utf-8').read()
		except BaseException:
			pass

		if likeOrComm == 0 and str(i) not in SendingPostsLike: #–õ–∞–π–∫–∏
			keyboard.add_button('–ñ–∞–ª–æ–±–∞')
			SendAllUsMsg(getUsersForMsg(AllIdInList1), text, keyboard)

		if likeOrComm == 1 and str(i) not in SendingPostsComm: #–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
			keyboard.add_button('–ó–∞–∫—Ä—ã—Ç—ã–µ –∫–æ–º-–∏–∏')
			keyboard.add_line()
			keyboard.add_button('–ñ–∞–ª–æ–±–∞')
			SendAllUsMsg(getUsersForMsg(AllIdInList1), text, keyboard)

	except BaseException:
		print(traceback.format_exc())


def CheckComment(id, wall): # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞
	elements = wall.replace('https://vk.com/wall','').split('_')
	own = elements[0]
	itm = elements[1]
	n=0
	offset = 0
	usComm = False
	CommCount=None
	RTRN = False
	try:
		CommCount = random.choice([vkSrv1,vkSrv2,vkSrv3,vkSrv4,vkSrv5,vkSrv6]).wall.getComments(owner_id=own, post_id=itm)['count']
	except BaseException:
		return True
	count100 = math.ceil(CommCount/100)
	offset = 0
	for i in range(count100):
		i += 1
		try:
			get = random.choice([vkSrv1,vkSrv2,vkSrv3,vkSrv4,vkSrv5,vkSrv6]).wall.getComments(owner_id=own, post_id=itm, offset=offset, count=100, sort='desc')
			if len(get['items']) == 0:
				break
			for j in get['items']:
				n+=1
				if j['from_id'] == id:
					RTRN = True
					return RTRN
		except BaseException as e:
			print(e)
		offset += 100
	return RTRN


def CommentCheckProcess(id, walls, Todaysdate): # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–æ–≤ 
	b = CheckComments(id, walls, random.choice([vkSrv1,vkSrv2,vkSrv3,vkSrv4,vkSrv5,vkSrv6]))
	threadForCommUs.remove(id)
	if b == True:
		open(r'data/'+str(id)+'WallsForComm.txt', 'w',encoding='utf-8').write('None')
		WallForComm = ''
		try:
			WallForComm = open(r'data/'+Todaysdate+'WallForComm.txt',encoding='utf-8').read()
		except BaseException:
			pass
		text = open('data/'+str(id)+'post.txt',encoding='utf-8').read()
		if text not in WallForComm:


			open(r'data/'+Todaysdate+'WallForComm.txt','a',encoding='utf-8').write(text+'\n')
			open(r'data/'+Todaysdate+'UsersForComm.txt','a',encoding='utf-8').write(str(id)+'\n')
			ForOwnANdItem = text.replace("https://vk.com/wall", "").split("_")
			owner_id = ForOwnANdItem[0]
			item_id = ForOwnANdItem[1]
			open('data/PostCom_From'+str(id)+'_'+Todaysdate+'.txt', 'w', encoding='utf-8').write(str('https://vk.com/wall'+owner_id+'_'+item_id))
			open('data/Post_From'+str(id)+'_'+Todaysdate+'.txt', 'w', encoding='utf-8').write(str('https://vk.com/wall'+owner_id+'_'+item_id))
			open('data/wall'+owner_id+'_'+item_id+'COMM.txt', 'w', encoding='utf-8').write(str(id))
			addPosts = 0
			try:
				addPosts = int(open('data/addPost'+str(id)+'.txt', encoding='utf-8').read().split()[0])
			except BaseException:
				pass
			if addPosts > 0:
				open('data/addPost'+str(id)+'.txt', 'w', encoding='utf-8').write(str(addPosts - 1))
			
			msstart(id, '‚úÖ–¢–≤–æ—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!')
			open('MSW/SendPostsUsrs.txt', 'a', encoding='utf-8').write(str(id)+'\n')

			vipUs = ''
			try:
				vipUs = open('data/vip.txt', encoding='utf-8').read()
			except BaseException:
				pass

			if str(id) not in vipUs:
				threading.Thread(target=SendPostsAllUs, args=(id,text,'üí¨ –ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ –ø–æ—Å—Ç!\n'+text, 1,  )).start()
				
			else:
				open('data/vipPosts.txt', 'a', encoding='utf-8').write(text+'\n')
				threading.Thread(target=SendPostsAllUs, args=(id,text,'üíéüí¨ –ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ –ø–æ—Å—Ç!\n'+text, 1,  )).start()

		if text in WallForComm:
			msstart(id, '‚õî–≠—Ç–∞ –∑–∞–ø–∏—Å—å —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!') # –ü–æ—Å—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
	else:

		keyboard = VkKeyboard(inline=True)
		keyboard.add_button('–ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª')
		keyboard.add_button('–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å')
		keyboard.add_line()
		keyboard.add_button('–ñ–∞–ª–æ–±–∞')
		ms = ''
		n=0
		for cc in b:
			n+=1
			vPsts = ''
			try:
				vPsts = open('data/vipPosts.txt',encoding='utf-8').read()
			except BaseException:
				pass
			if cc in vPsts:
				ms += 'üíé '+cc+'\n'
			else:	
				ms += str(n)+'. '+cc+'\n'
		send_message(id, '‚õî–¢—ã –Ω–µ –æ—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ —ç—Ç–∏—Ö –ø–æ—Å—Ç–∞—Ö:\n\n'+ms+'\n\n@id730993538(*–û–±—Ä–∞—Ç–∏—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É), –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Å—Ç–∞–º–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å" –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–±–µ –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã', keyboard)


def TimerBot():
	try:
		while True:
			time1 = (datetime.now()).strftime('%H:%M:%S')
			Date = (datetime.now()).strftime('%d.%m.%y')


			if time1 == '00:00:00':
				
				# –ø—Ä–æ–≤–µ—Ä–∫–∞ VIP-–æ–∫
				try:
					vipUs = ''
					try:
						vipUs = open('data/vip.txt', encoding='utf-8').read()
					except BaseException:
						pass
					vipUs1 = vipUs.split()
					for i in vipUs1:
						dt = open('data/vip'+str(i)+'.txt', encoding='utf-8').read()
						if Date in dt:
							open('data/vip.txt', 'w', encoding='utf-8').write(vipUs.replace(str(us)+'\n',''))
							os.remove('data/vip'+str(i)+'.txt')
							send_messageCHAT(3, '@id'+str(i)+' - —Å–Ω—è–ª —Å –Ω–µ–≥–æ VIP —Å—Ç–∞—Ç—É—Å')
							try:
								send_message(i, 'üíé –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è VIP-—Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–æ–Ω—á–µ–Ω!')
							except BaseException:
								pass
				except BaseException as e:
					send_messageCHAT(3, '–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∏–ø–æ–∫: '+str(e))

				# –û—á–∏—Å—Ç–∫–∞ —Å–ª–æ—Ç–æ–≤
				slot1=''
				slot2=''
				slot3=''
				slot4=''
				slot5=''
				try:
					slot1 = open(r'data/slotTIme1.txt', encoding='utf-8').read()
					slot2 = open(r'data/slotTIme2.txt', encoding='utf-8').read()
					slot3 = open(r'data/slotTIme3.txt', encoding='utf-8').read()
					slot4 = open(r'data/slotTIme4.txt', encoding='utf-8').read()
					slot5 = open(r'data/slotTIme5.txt', encoding='utf-8').read()
				except BaseException:
					open(r'data/slotTIme1.txt','w', encoding='utf-8')
					open(r'data/slotTIme2.txt','w', encoding='utf-8')
					open(r'data/slotTIme3.txt','w', encoding='utf-8')
					open(r'data/slotTIme4.txt','w', encoding='utf-8')
					open(r'data/slotTIme5.txt','w', encoding='utf-8')
				if Date in slot1:
					open(r'data/slot1.txt', 'w',encoding='utf-8').write('mutsupp')
					open(r'data/slotTIme1.txt','w', encoding='utf-8')
					vk.messages.send(chat_id=3, message='–°–ª–æ—Ç –Ω–æ–º–µ—Ä 1 –æ—á–∏—â–µ–Ω', random_id=0)
				if Date in slot2:
					open(r'data/slot2.txt', 'w',encoding='utf-8').write('mutsupp')
					open(r'data/slotTIme2.txt','w', encoding='utf-8')
					vk.messages.send(chat_id=3, message='–°–ª–æ—Ç –Ω–æ–º–µ—Ä 2 –æ—á–∏—â–µ–Ω', random_id=0)
				if Date in slot3:
					open(r'data/slot3.txt', 'w',encoding='utf-8').write('mutsupp')
					open(r'data/slotTIme3.txt','w', encoding='utf-8')
					vk.messages.send(chat_id=3, message='–°–ª–æ—Ç –Ω–æ–º–µ—Ä 3 –æ—á–∏—â–µ–Ω', random_id=0)
				if Date in slot4:
					open(r'data/slot4.txt', 'w',encoding='utf-8').write('mutsupp')
					open(r'data/slotTIme4.txt','w', encoding='utf-8')
					vk.messages.send(chat_id=3, message='–°–ª–æ—Ç –Ω–æ–º–µ—Ä 4 –æ—á–∏—â–µ–Ω', random_id=0)
				if Date in slot5:
					open(r'data/slot5.txt', 'w',encoding='utf-8').write('mutsupp')
					open(r'data/slotTIme5.txt','w', encoding='utf-8')
					vk.messages.send(chat_id=3, message='–°–ª–æ—Ç –Ω–æ–º–µ—Ä 5 –æ—á–∏—â–µ–Ω', random_id=0)

				SendingDontLikedAndCommPosts()

				# DeleteDontActiveUsrs()


			elif time1 == '12:00:00':
				SendingDontLikedAndCommPosts()


	except BaseException:
		print(traceback.format_exc())
		threading.Thread(target=TimerBot).start()


def GetWallsComm(id): # –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
	walls = ''
	try:
		walls += open(r'data/'+(datetime.now()).strftime('%d.%m.%y')+'WallForComm.txt',encoding='utf-8').read()
	except BaseException:
		pass
	try:
		walls += open(r'data/'+((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')+'WallForComm.txt',encoding='utf-8').read()
	except BaseException:
		pass
	walls = walls.split()
	for i in walls:
		n = walls.count(i)
		if n > 1:
			for c in range(n-1):
				walls.remove(i)
	n = 0
	if len(walls) < 15:
		n = len(walls)-1
		if n < 0:
			n = 0
	if len(walls) >= 15:
		n = 15
	wlcm = []
	n -= 1
	if n < 0:
		n+=1
	while len(wlcm)<n:
		wl = random.choice(walls)
		if wl not in wlcm:
			wlcm.append(wl)
	return wlcm


def GetPostsForLikes(id): # –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –ª–∞–π–∫–æ–≤
	huh = 'none'
	try:
		huh = open('data/'+str(id)+'postsForLikes.txt', encoding='utf-8').read()
	except BaseException:
		huh = 'none' 
	if 'none' not in huh:
		return huh.split()
	if '' not in huh:
		return huh.split()
	TodaysDate = (datetime.now()).strftime('%d.%m.%y')
	LastDate = ((datetime.now()) - timedelta(days=1)).strftime('%d.%m.%y')
	walls = ''
	try: 
		walls += open(r'data/'+TodaysDate+'wall.txt', encoding="utf-8").read().replace(' ', '')
	except BaseException:
		pass
	try:
		walls += open(r'data/'+LastDate+'wall.txt', encoding="utf-8").read().replace(' ', '')
	except BaseException:
		pass

	l = walls.split()
	wls = []
	rtrn = []
	for i in l:
		if i not in wls:
			wls.append(i)
	open('data/'+str(id)+'postsForLikes.txt', 'w', encoding='utf-8').write('')
	if len(wls) < 51:
		for i in wls:
			open('data/'+str(id)+'postsForLikes.txt', 'a', encoding='utf-8').write(i+'\n')
		return wls 
	else:
		while len(rtrn) < 50:
			rtrn.append(random.choice(wls))
	for i in rtrn:
		open('data/'+str(id)+'postsForLikes.txt', 'a', encoding='utf-8').write(i+'\n')
	return rtrn


def WallWriting(idw,TodaysDate,LastDate, i): # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞
	global threadCount
	try:
		msstart(idw, "üîé–ü—Ä–æ–≤–µ—Ä—è—é, –ª–∞–π–∫–∞–µ—à—å –ª–∏ —Ç—ã –∑–∞–ø–∏—Å–∏...")

		l = GetPostsForLikes(idw)
		checkLiked = CheckLikes(idw, l, random.choice([vkSrv1,vkSrv2,vkSrv3,vkSrv4,vkSrv5,vkSrv6]))

		vipUs = ''
		try:
			vipUs = open('data/vip.txt', encoding='utf-8').read()
		except BaseException:
			pass

		if str(idw) not in vipUs:
			time.sleep(10)

		if checkLiked == True: # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ–ª–∞–π–∫–∞–ª –≤—Å–µ –∑–∞–ø–∏—Å–∏
			open('data/'+str(id)+'postsForLikes.txt', 'w', encoding='utf-8').write('none')
			ForOwnANdItem = i.replace("https://vk.com/wall", "").split("_")
			owner_id = ForOwnANdItem[0]
			item_id = ForOwnANdItem[1]

			# –ó–∞–ø–∏—Å—å –ø–æ—Å—Ç–∞ –≤ –±–∞–∑—É
			open('data/Post_From'+str(idw)+'_'+TodaysDate+'.txt', 'w', encoding='utf-8').write(str('https://vk.com/wall'+owner_id+'_'+item_id)) # –ü–æ—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ
			open('data/wall'+owner_id+'_'+item_id+'LIKE.txt', 'w', encoding='utf-8').write(str(idw)) # –§–∞–π–ª –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –ø–æ—Å—Ç—É —Ç–æ–≥–æ –∫—Ç–æ –µ–≥–æ —Å–∫–∏–Ω—É–ª

			with open(f"data/{TodaysDate}wall.txt", "a", encoding="utf-8") as file:
				file.write(i + "\n")

			open('data/'+TodaysDate+'peoples.txt','a',encoding='utf-8').write(str(idw)+'\n') # –§–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –≤—Å–µ—Ö –∫—Ç–æ –∫–∏–Ω—É–ª —Å–µ–≥–æ–¥–Ω—è –ø–æ—Å—Ç
			open('MSW/SendPostsUsrs.txt', 'a', encoding='utf-8').write(str(idw)+'\n') # MS WORK —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ —Å–∫–∏–Ω—É–ª –ø–æ—Å—Ç–æ–≤

			# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç
			addPosts = 0
			try:
				addPosts = int(open('data/addPost'+str(idw)+'.txt', encoding='utf-8').read().split()[0])
			except BaseException:
				pass
			if addPosts > 0:
				open('data/addPost'+str(idw)+'.txt', 'w', encoding='utf-8').write(str(addPosts - 1))

			# –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø–æ—Å—Ç –∑–∞–ø–∏—Å–∞–Ω
			send_message(idw, "‚úÖ–¢–≤–æ–π –ø–æ—Å—Ç " + i + " –∑–∞–ø–∏—Å–∞–Ω")
			

			# –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç–µ
			vipUs = ''
			try:
				vipUs = open('data/vip.txt', encoding='utf-8').read()
			except BaseException:
				pass
			if str(idw) not in vipUs:
				threading.Thread(target=SendPostsAllUs, args=(idw,i,'‚úè –ü–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ—Å—Ç!\n'+i, 0, )).start()
			else:
				open('data/vipPosts.txt', 'a', encoding='utf-8').write(i+'\n')
				threading.Thread(target=SendPostsAllUs, args=(idw,i,'üíé‚úè –ü–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ—Å—Ç!\n'+i, 0, )).start()

			# –ê–≤—Ç–æ–õ–∞–π–∫
			threading.Thread(target=AutoLike, args=(i,)).start()

		else: # –ß–µ–ª–æ–≤–µ–∫ –Ω–µ –ø—Ä–æ–ª–π–∫–∞–ª –∑–∞–ø–∏—Å–∏
			keyboard = VkKeyboard(inline=True)
			keyboard.add_callback_button('–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞', VkKeyboardColor.SECONDARY, payload=3)
			keyboard.add_button('–ü—Ä–æ–ª–∞–π–∫–∞–ª', VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–ñ–∞–ª–æ–±–∞')

			walls = ''
			n=0
			for w in checkLiked:
				n += 1
				vPsts = ''
				try:
					vPsts = open('data/vipPosts.txt',encoding='utf-8').read()
				except BaseException:
					pass
				if w in vPsts:
					walls += 'üíé' + ' ' + w + '\n'
				else:
					walls += str(n) + '. ' + w + '\n'


			send_message(idw, "üíî–¢—ã –Ω–µ –ø—Ä–æ–ª–∞–π–∫–∞–ª —ç—Ç–∏ –∑–∞–ø–∏—Å–∏:\n\n"+walls, keyboard)
			open('data/'+str(idw)+'PostsNotLiked.txt', 'w', encoding='utf-8').write(walls)
	except BaseException as e: 
		print(e)

	threadCount-=1
	try:
		threadForId.remove(idw)
	except BaseException:
		vk.messages.send(chat_id=3, message='–æ—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ: '+traceback.format_exc())


def msstart(ids, text): # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
	keyboard = VkKeyboard()
	
	buttons = ['üë§–ü—Ä–æ—Ñ–∏–ª—å', 'üí∏–¶–µ–Ω—ã']
	button_colors = [VkKeyboardColor.POSITIVE, VkKeyboardColor.NEGATIVE]

	n = 0
	for btn, btn_color in zip(buttons, button_colors):
		keyboard.add_callback_button(btn, color=btn_color, payload=n)
		n+=1
	keyboard.add_line()
	keyboard.add_openlink_button('üìû–ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'https://vk.com/id730993538') 

	send_message(ids, text, keyboard)



def send_message(user_id, message, keyboard=None): # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å
	post = {
		"user_id": user_id,
		"message": message,
		"random_id": 0
		}

	if keyboard != None:
		post["keyboard"] = keyboard.get_keyboard()
	else:
		post=post

	session.method("messages.send", post)


def send_messageCHAT(user_id, message, keyboard=None): # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É
	post = {
		"chat_id": user_id,
		"message": message,
		"random_id": 0
		}

	if keyboard != None:
		post["keyboard"] = keyboard.get_keyboard()
	else:
		post=post

	session.method("messages.send", post)


def CheckSubscOnGroup(id): # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã
	group_not_subsc = ""
	for n in range(3):
		try:
			n+=1
			group = open(r'data/slot'+str(n)+'.txt', encoding='utf-8').read().replace(' ','').replace('\n','')
			if group == '' or 'mutsupp' in group:
				subsc_gr = ''
			else:
				groupIsSubs = vk.groups.isMember(group_id=group, user_id=id)
				groupID = vk.groups.getById(group_id=group)[0]['screen_name']
				if groupIsSubs != 1:
					group_not_subsc += '@club'+group+'('+groupID+') \n'
		except BaseException as e:
			if ('No such file or directory:' in traceback.format_exc()):
				open(r'data/slot'+str(n)+'.txt', 'w',encoding='utf-8')
			else:
				print(traceback.format_exc())
				vk.messages.send(chat_id=3, message='@all –û—à–∏–±–∫–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö!!!\n\n' + str(e), random_id=0)

	return group_not_subsc

def printvk(text,id=730993538): # print in vk
	vk.messages.send(chat_id=3, message=str(text),random_id=0)


if __name__ == '__main__':
	threading.Thread(target=main).start()
	threading.Thread(target=TimerBot).start()
